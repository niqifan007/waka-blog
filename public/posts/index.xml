<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>所有文章 - waka&#39;s blog</title>
    <link>http://blog.579878700.xyz/posts/</link>
    <description>所有文章 | waka&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 25 Jul 2023 22:00:57 &#43;0800</lastBuildDate><atom:link href="http://blog.579878700.xyz/posts/" rel="self" type="application/rss+xml" /><item>
  <title>Docker Hub 镜像加速器汇总</title>
  <link>http://blog.579878700.xyz/dockerhub/</link>
  <pubDate>Tue, 25 Jul 2023 22:00:57 &#43;0800</pubDate>
  <author>map[avatar:/images/avatar.jpg email:&lt;nil&gt; link:&lt;nil&gt; name:waka]</author>
  <guid>http://blog.579878700.xyz/dockerhub/</guid>
  <description><![CDATA[<h1 id="docker-hub-镜像加速器">Docker Hub 镜像加速器</h1>
<p>国内从 Docker Hub 拉取镜像有时会遇到困难，此时可以配置镜像加速器。Docker 官方和国内很多云服务商都提供了国内加速器服务。</p>
<blockquote>
<p>Dockerized 实践 <a href="https://github.com/y0ngb1n/dockerized"target="_blank" rel="external nofollow noopener noreferrer">https://github.com/y0ngb1n/dockerized<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></p>
</blockquote>
<h2 id="配置加速地址">配置加速地址</h2>
<blockquote>
<p>Ubuntu 16.04+、Debian 8+、CentOS 7+</p>
</blockquote>
<p>创建或修改 <code>/etc/docker/daemon.json</code>：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo mkdir -p /etc/docker
</span></span><span class="line"><span class="cl">sudo tee /etc/docker/daemon.json &lt;&lt;-&#39;EOF&#39;
</span></span><span class="line"><span class="cl">{
</span></span><span class="line"><span class="cl">    &#34;registry-mirrors&#34;: [
</span></span><span class="line"><span class="cl">        &#34;https://docker.m.daocloud.io&#34;,
</span></span><span class="line"><span class="cl">        &#34;https://dockerproxy.com&#34;,
</span></span><span class="line"><span class="cl">        &#34;https://docker.mirrors.ustc.edu.cn&#34;,
</span></span><span class="line"><span class="cl">        &#34;https://docker.nju.edu.cn&#34;
</span></span><span class="line"><span class="cl">    ]
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">EOF
</span></span><span class="line"><span class="cl">sudo systemctl daemon-reload
</span></span><span class="line"><span class="cl">sudo systemctl restart docker
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="docker-hub-镜像加速器列表">Docker Hub 镜像加速器列表</h2>
<table>
<thead>
<tr>
<th>镜像加速器</th>
<th>镜像加速器地址</th>
<th>专属加速器<a href="#" title="需登录后获取平台分配的专属加速器">？</a></th>
<th>其它加速<a href="#" title="支持哪些镜像来源的镜像加速">？</a></th>
</tr>
</thead>
<tbody>
<tr>
<td><del><a href="https://docker-cn.com/registry-mirror"target="_blank" rel="external nofollow noopener noreferrer">Docker 中国官方镜像<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></del></td>
<td><del><code>https://registry.docker-cn.com</code></del></td>
<td></td>
<td><del>Docker Hub</del>（<a href="https://github.com/docker/docker.github.io/issues/8793"target="_blank" rel="external nofollow noopener noreferrer">已关闭<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>）</td>
</tr>
<tr>
<td><a href="https://github.com/DaoCloud/public-image-mirror"target="_blank" rel="external nofollow noopener noreferrer">DaoCloud 镜像站<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></td>
<td><code>https://docker.m.daocloud.io</code></td>
<td></td>
<td>Docker Hub、GCR、K8S、GHCR、Quay、NVCR 等</td>
</tr>
<tr>
<td><a href="https://github.com/Azure/container-service-for-azure-china/blob/master/aks/README.md#22-container-registry-proxy"target="_blank" rel="external nofollow noopener noreferrer">Azure 中国镜像<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></td>
<td><code>https://dockerhub.azk8s.cn</code></td>
<td>仅供内部访问</td>
<td>Docker Hub、GCR、Quay</td>
</tr>
<tr>
<td><a href="https://mirrors.ustc.edu.cn/help/dockerhub.html"target="_blank" rel="external nofollow noopener noreferrer">科大镜像站<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></td>
<td><code>https://docker.mirrors.ustc.edu.cn</code></td>
<td><a href="https://mirrors.ustc.edu.cn/help/dockerhub.html"target="_blank" rel="external nofollow noopener noreferrer">仅供内部访问<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></td>
<td>Docker Hub、<a href="https://github.com/ustclug/mirrorrequest/issues/91"target="_blank" rel="external nofollow noopener noreferrer">GCR<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>、<a href="https://github.com/ustclug/mirrorrequest/issues/135"target="_blank" rel="external nofollow noopener noreferrer">Quay<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></td>
</tr>
<tr>
<td><a href="https://cr.console.aliyun.com"target="_blank" rel="external nofollow noopener noreferrer">阿里云<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></td>
<td><code>https://&lt;your_code&gt;.mirror.aliyuncs.com</code></td>
<td>需登录，系统分配</td>
<td>Docker Hub</td>
</tr>
<tr>
<td><del><a href="https://kirk-enterprise.github.io/hub-docs/#/user-guide/mirror"target="_blank" rel="external nofollow noopener noreferrer">七牛云<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></del></td>
<td><del><code>https://reg-mirror.qiniu.com</code></del></td>
<td></td>
<td><del>Docker Hub、GCR、Quay</del></td>
</tr>
<tr>
<td><a href="https://c.163yun.com/hub"target="_blank" rel="external nofollow noopener noreferrer">网易云<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></td>
<td><code>https://hub-mirror.c.163.com</code></td>
<td></td>
<td>Docker Hub</td>
</tr>
<tr>
<td><a href="https://cloud.tencent.com/document/product/457/9113"target="_blank" rel="external nofollow noopener noreferrer">腾讯云<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></td>
<td><code>https://mirror.ccs.tencentyun.com</code></td>
<td>仅供内部访问</td>
<td>Docker Hub</td>
</tr>
<tr>
<td><a href="https://dockerproxy.com"target="_blank" rel="external nofollow noopener noreferrer">Docker 镜像代理<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></td>
<td><code>https://dockerproxy.com</code></td>
<td></td>
<td>Docker Hub、GCR、K8S、GHCR</td>
</tr>
<tr>
<td><a href="https://cloud.baidu.com/doc/CCE/s/Yjxppt74z#%E4%BD%BF%E7%94%A8dockerhub%E5%8A%A0%E9%80%9F%E5%99%A8"target="_blank" rel="external nofollow noopener noreferrer">百度云<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></td>
<td><code>https://mirror.baidubce.com</code></td>
<td></td>
<td>Docker Hub</td>
</tr>
<tr>
<td><a href="https://doc.nju.edu.cn/books/35f4a"target="_blank" rel="external nofollow noopener noreferrer">南京大学镜像站<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></td>
<td><code>https://docker.nju.edu.cn</code></td>
<td></td>
<td>Docker Hub、GCR、GHCR、Quay、NVCR 等</td>
</tr>
<tr>
<td><a href="https://mirrors.sjtug.sjtu.edu.cn/"target="_blank" rel="external nofollow noopener noreferrer">上海交大镜像站<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></td>
<td><code>https://docker.mirrors.sjtug.sjtu.edu.cn</code></td>
<td></td>
<td>Docker Hub、GCR 等</td>
</tr>
</tbody>
</table>
<blockquote>
<p>⚠️ 以下镜像站存在未同步最新源镜像问题，请按需选用</p>
<ul>
<li>阿里云</li>
</ul>
</blockquote>
<h2 id="检查加速器是否生效">检查加速器是否生效</h2>
<p>命令行执行 <code>docker info</code>，如果从结果中看到了如下内容，说明配置成功。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="go">Registry Mirrors:
</span></span></span><span class="line"><span class="cl"><span class="go"> [...]
</span></span></span><span class="line"><span class="cl"><span class="go"> https://docker.m.daocloud.io
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="docker-hub-镜像测速">Docker Hub 镜像测速</h2>
<p>使用镜像前后，可使用 <code>time</code> 统计所花费的总时间。测速前先移除本地的镜像！</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> docker rmi node:latest
</span></span><span class="line"><span class="cl"><span class="gp">$</span> <span class="nb">time</span> docker pull node:latest
</span></span><span class="line"><span class="cl"><span class="go">Pulling repository node
</span></span></span><span class="line"><span class="cl"><span class="go">[...]
</span></span></span><span class="line"><span class="cl"><span class="go"></span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="go">real   1m14.078s
</span></span></span><span class="line"><span class="cl"><span class="go">user   0m0.176s
</span></span></span><span class="line"><span class="cl"><span class="go">sys    0m0.120s
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="参考链接">参考链接</h2>
<ul>
<li><a href="https://docs.docker.com/registry/recipes/mirror/"target="_blank" rel="external nofollow noopener noreferrer">https://docs.docker.com/registry/recipes/mirror/<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
<li><a href="https://github.com/yeasy/docker_practice/blob/master/install/mirror.md"target="_blank" rel="external nofollow noopener noreferrer">https://github.com/yeasy/docker_practice/blob/master/install/mirror.md<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
<li><a href="https://github.com/moby/moby/blob/d409b05970e686993e343d226fae5b463d872082/docs/articles/registry_mirror.md"target="_blank" rel="external nofollow noopener noreferrer">https://github.com/moby/moby/blob/d409b05970e686993e343d226fae5b463d872082/docs/articles/registry_mirror.md<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
<li><a href="https://www.fengbohello.top/archives/docker-registry-mirror"target="_blank" rel="external nofollow noopener noreferrer">https://www.fengbohello.top/archives/docker-registry-mirror<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
<li><a href="https://www.ilanni.com/?p=14534"target="_blank" rel="external nofollow noopener noreferrer">https://www.ilanni.com/?p=14534<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
<li><a href="https://github.com/Azure/container-service-for-azure-china/blob/master/aks/README.md#22-container-registry-proxy"target="_blank" rel="external nofollow noopener noreferrer">https://github.com/Azure/container-service-for-azure-china/blob/master/aks/README.md#22-container-registry-proxy<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
<li><a href="https://moelove.info/2020/09/20/"target="_blank" rel="external nofollow noopener noreferrer">https://moelove.info/2020/09/20/<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>突破-DockerHub-限制全镜像加速服务/</li>
</ul>]]></description>
</item>
<item>
  <title>了解LSTM神经网络</title>
  <link>http://blog.579878700.xyz/lstm_2/</link>
  <pubDate>Mon, 24 Apr 2023 01:44:51 &#43;0800</pubDate>
  <author>map[avatar:/images/avatar.jpg email:&lt;nil&gt; link:&lt;nil&gt; name:waka]</author>
  <guid>http://blog.579878700.xyz/lstm_2/</guid>
  <description><![CDATA[<h2 id="循环神经网络">循环神经网络</h2>
<p>人类不会每一秒都从头开始思考。当你阅读这篇文章时，你会根据你对前面单词的理解来理解每个单词。你不会扔掉所有东西，然后重新开始思考。你的思想有坚持。</p>
<p>传统的神经网络无法做到这一点，这似乎是一个主要缺点。例如，假设您想对电影中每一点发生的事件类型进行分类。目前尚不清楚传统的神经网络如何利用其对电影中先前事件的推理来通知后来的事件。</p>
<p>递归神经网络解决了这个问题。它们是带有循环的网络，允许信息持续存在。</p>
<p></p>
<p><strong>递归神经网络有循环。</strong></p>
<p>在上图中，一大块神经网络，$A$, 查看一些输入$x_t$并输出一个值$h_t$. 循环允许信息从网络的一个步骤传递到下一个步骤。</p>
<p>这些循环使递归神经网络看起来有点神秘。然而，如果你多想想，就会发现它们与普通的神经网络并没有什么不同。循环神经网络可以被认为是同一网络的多个副本，每个副本都将一条消息传递给后继者。考虑一下如果我们展开循环会发生什么：</p>
<p></p>
<p><strong>展开的递归神经网络。</strong></p>
<p>这种链状性质表明循环神经网络与序列和列表密切相关。它们是用于此类数据的神经网络的自然架构。</p>
<p>他们肯定被使用了！在过去的几年里，将 RNN 应用于各种问题取得了令人难以置信的成功：语音识别、语言建模、翻译、图像字幕……这个例子不胜枚举。关于 RNN 可以实现的惊人壮举，我将在 Andrej Karpathy 的优秀博客文章<a href="http://karpathy.github.io/2015/05/21/rnn-effectiveness/"target="_blank" rel="external nofollow noopener noreferrer">The Unreasonable Effectiveness of Recurrent Neural Networks<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>中进行讨论。但他们真的很了不起。</p>
<p>这些成功的关键是使用“LSTM”，这是一种非常特殊的递归神经网络，对于许多任务，它比标准版本要好得多。几乎所有基于递归神经网络的令人兴奋的结果都是用它们实现的。本文将探讨这些 LSTM。</p>
<h2 id="长期依赖的问题">长期依赖的问题</h2>
<p>RNN 的吸引力之一是它们可能能够将以前的信息连接到当前的任务，例如使用以前的视频帧可能会告知对当前帧的理解。如果 RNN 可以做到这一点，它们将非常有用。但他们可以吗？这取决于。</p>
<p>有时，我们只需要查看最近的信息即可执行当前任务。例如，考虑一个语言模型试图根据前面的单词预测下一个单词。如果我们试图预测“the clouds are in the <em>sky</em> ”中的最后一个词，我们不需要任何进一步的上下文——很明显下一个词将是 sky。在这种情况下，相关信息和需要它的地方之间的差距很小，RNN 可以学习使用过去的信息。</p>
<p></p>
<p>但在某些情况下，我们需要更多上下文。考虑尝试预测文本“我在法国长大……我说一口流利的_法语_”中的最后一个词。最近的信息表明，下一个词可能是一种语言的名称，但如果我们想缩小哪种语言的范围，我们需要法国的上下文，从更远的地方。相关信息和需要它的点之间的差距变得非常大是完全有可能的。</p>
<p>不幸的是，随着差距的扩大，RNN 变得无法学习连接信息。</p>
<p></p>
<p>理论上，RNN 绝对有能力处理这种“长期依赖”。人类可以仔细地为他们挑选参数来解决这种形式的玩具问题。遗憾的是，在实践中，RNN 似乎无法学习它们。<a href="http://people.idsia.ch/~juergen/SeppHochreiter1991ThesisAdvisorSchmidhuber.pdf"target="_blank" rel="external nofollow noopener noreferrer">Hochreiter (1991) [German]<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>和<a href="http://www-dsi.ing.unifi.it/~paolo/ps/tnn-94-gradient.pdf"target="_blank" rel="external nofollow noopener noreferrer">Bengio 等人<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>深入探讨了这个问题。<a href="http://www-dsi.ing.unifi.it/~paolo/ps/tnn-94-gradient.pdf"target="_blank" rel="external nofollow noopener noreferrer">(1994)<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>，他发现了一些非常根本的原因，为什么这可能很困难。</p>
<p>值得庆幸的是，LSTM 没有这个问题！</p>
<h2 id="长短期记忆网络">长短期记忆网络</h2>
<p>长短期记忆网络——通常简称为“LSTM”——是一种特殊的 RNN，能够学习长期依赖关系。<a href="http://www.bioinf.jku.at/publications/older/2604.pdf"target="_blank" rel="external nofollow noopener noreferrer">它们由Hochreiter &amp; Schmidhuber (1997)<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>引入，并在后续工作中被许多人提炼和推广。<a href="http://colah.github.io/posts/2015-08-Understanding-LSTMs/#fn1"target="_blank" rel="external nofollow noopener noreferrer"><sup><span><span>1</span></span></sup><i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>它们在处理大量问题时表现出色，现在已被广泛使用。</p>
<p>LSTM 明确设计用于避免长期依赖问题。长时间记住信息实际上是他们的默认行为，而不是他们努力学习的东西！</p>
<p>所有循环神经网络都具有神经网络重复模块链的形式。在标准 RNN 中，这个重复模块将具有非常简单的结构，例如单个 tanh 层。</p>
<p></p>
<p><strong>标准 RNN 中的重复模块包含单层。</strong></p>
<p>LSTM 也有这种链状结构，但重复模块有不同的结构。不是只有一个神经网络层，而是有四个，以一种非常特殊的方式进行交互。</p>
<p></p>
<p><strong>LSTM 中的重复模块包含四个交互层。</strong></p>
<p>不要担心正在发生的事情的细节。稍后我们将逐步介绍 LSTM 图。现在，让我们试着熟悉我们将要使用的符号。</p>
<p></p>
<p>在上图中，每条线都带有一个完整的向量，从一个节点的输出到其他节点的输入。粉色圆圈代表逐点操作，如向量加法，而黄色框是学习的神经网络层。行合并表示串联，而行分叉表示其内容被复制并且副本转到不同的位置。</p>
<h2 id="lstm-背后的核心思想">LSTM 背后的核心思想</h2>
<p>LSTM 的关键是细胞状态，即贯穿图表顶部的水平线。</p>
<p>细胞状态有点像传送带。它直接沿着整个链条运行，只有一些次要的线性交互。信息很容易原封不动地沿着它流动。</p>
<p></p>
<p>LSTM 确实有能力删除或添加信息到细胞状态，由称为门的结构仔细调节。</p>
<p>门是一种有选择地让信息通过的方式。它们由一个 sigmoid 神经网络层和一个逐点乘法运算组成。</p>
<p></p>
<p>sigmoid 层输出介于 0 和 1 之间的数字，描述应该让多少成分通过。值为零表示“不让任何东西通过”，而值为 1 表示“让一切都通过！”</p>
<p>LSTM 具有三个这样的门，以保护和控制单元状态。</p>
<h2 id="循序渐进的-lstm-演练">循序渐进的 LSTM 演练</h2>
<p>LSTM 的第一步是决定我们要从细胞状态中丢弃哪些信息。该决定由称为“遗忘门层”的 S 形层做出。它看着$h_{t-1}$和$x_t$, 并输出一个介于$0$和$1$对于细胞状态中的每个数字$C_{t-1}$. A$1$代表“完全保留这个”，而一个$0$代表“彻底摆脱这个”。</p>
<p>让我们回到我们的语言模型示例，它试图根据所有先前的单词预测下一个单词。在这样的问题中，细胞状态可能包括当前主体的性别，以便可以使用正确的代词。当我们看到一个新主题时，我们想忘记旧主题的性别。</p>
<p></p>
<p>下一步是决定我们要在细胞状态中存储哪些新信息。这有两个部分。首先，称为“输入门层”的 sigmoid 层决定我们将更新哪些值。接下来，一个 tanh 层创建一个新候选值的向量，$\tilde{C}_t$，可以将其添加到状态。在下一步中，我们将结合这两者来创建对状态的更新。</p>
<p>在我们的语言模型示例中，我们想要将新主题的性别添加到单元格状态，以替换我们忘记的旧主题。</p>
<p></p>
<p>现在是更新旧细胞状态的时候了，$C_{t-1}$, 进入新的细胞状态$C_t$. 前面的步骤已经决定了要做什么，我们只需要实际去做。</p>
<p>我们将旧状态乘以$f_t$，忘记了我们早些时候决定忘记的事情。然后我们添加$i_t*\tilde{C}_t$. 这是新的候选值，根据我们决定更新每个状态值的程度进行缩放。</p>
<p>在语言模型的情况下，这是我们实际上要删除有关旧主题性别的信息并添加新信息的地方，正如我们在前面的步骤中所决定的那样。</p>
<p></p>
<p>最后，我们需要决定要输出什么。此输出将基于我们的细胞状态，但将是过滤后的版本。首先，我们运行一个 sigmoid 层，它决定我们要输出细胞状态的哪些部分。然后，我们将细胞状态通过$\tanh$（将值推到介于$-1$和$1$) 并将其乘以 sigmoid 门的输出，这样我们就只输出我们决定输出的部分。</p>
<p>对于语言模型示例，由于它刚刚看到一个主语，它可能想要输出与动词相关的信息，以防接下来会发生什么。例如，它可能会输出主语是单数还是复数，以便我们知道如果接下来是动词应该变位的形式。</p>
<p></p>
<h2 id="长短期记忆的变体">长短期记忆的变体</h2>
<p>到目前为止，我所描述的是一个非常普通的 LSTM。但并不是所有的 LSTM 都和上面的一样。事实上，似乎几乎每篇涉及 LSTM 的论文都使用略有不同的版本。差异很小，但值得一提的是其中的一些差异。</p>
<p><a href="ftp://ftp.idsia.ch/pub/juergen/TimeCount-IJCNN2000.pdf"target="_blank" rel="external nofollow noopener noreferrer">由Gers &amp; Schmidhuber (2000)<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>引入的一种流行的 LSTM 变体正在添加“窥孔连接”。这意味着我们让门层查看单元状态。</p>
<p></p>
<p>上图给所有的门都加了窥视孔，但是很多论文会给一些窥视孔，其他的就不给了。</p>
<p>另一种变体是使用耦合的遗忘门和输入门。我们不是单独决定要忘记什么以及我们应该向什么添加新信息，而是一起做出这些决定。我们只会忘记什么时候要输入一些东西来代替它。当我们忘记旧的东西时，我们只会向状态输入新值。</p>
<p></p>
<p>LSTM 的一个稍微更显着的变化是门控循环单元 (Gated Recurrent Unit, GRU)，由<a href="http://arxiv.org/pdf/1406.1078v3.pdf"target="_blank" rel="external nofollow noopener noreferrer">Cho 等人引入。(2014)<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>。它将遗忘门和输入门组合成一个“更新门”。它还合并了细胞状态和隐藏状态，并做了一些其他的改变。生成的模型比标准 LSTM 模型更简单，并且越来越受欢迎。</p>
<p></p>
<p>这些只是一些最著名的 LSTM 变体。还有很多其他的，比如<a href="http://arxiv.org/pdf/1508.03790v2.pdf"target="_blank" rel="external nofollow noopener noreferrer">Yao 等人的 Depth Gated RNNs。(2015)<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>。还有一些完全不同的方法来解决长期依赖关系，比如<a href="http://arxiv.org/pdf/1402.3511v1.pdf"target="_blank" rel="external nofollow noopener noreferrer">Koutnik 等人的 Clockwork RNNs。(2014)<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>。</p>
<p>这些变体中哪个最好？差异重要吗？<a href="http://arxiv.org/pdf/1503.04069.pdf"target="_blank" rel="external nofollow noopener noreferrer">格雷夫等人。(2015)<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>对流行的变体进行了很好的比较，发现它们都差不多。<a href="http://jmlr.org/proceedings/papers/v37/jozefowicz15.pdf"target="_blank" rel="external nofollow noopener noreferrer">Jozefowicz 等人。(2015)<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>测试了超过一万个 RNN 架构，发现其中一些在某些任务上比 LSTM 更有效。</p>
<h2 id="结论">结论</h2>
<p>早些时候，我提到了人们使用 RNN 取得的显著成果。基本上所有这些都是使用 LSTM 实现的。对于大多数任务，它们确实工作得更好！</p>
<p>写成一组方程式，LSTM 看起来相当吓人。希望在本文中逐步介绍它们可以使它们更容易理解。</p>
<p>LSTM 是我们使用 RNN 可以完成的一大步。人们很自然地会想：是否又迈出了一大步？研究人员的共同意见是：“是的！还有下一步，就是注意！这个想法是让 RNN 的每一步都从一些更大的信息集合中挑选信息来查看。例如，如果您使用 RNN 创建描述图像的标题，它可能会选择图像的一部分来查看它输出的每个单词。事实上，<a href="http://arxiv.org/pdf/1502.03044v2.pdf"target="_blank" rel="external nofollow noopener noreferrer">徐_等人。_(2015)<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>正是这样做的——如果你想探索注意力，这可能是一个有趣的起点！使用注意力已经取得了许多非常令人兴奋的结果，而且似乎还有更多的结果……</p>
<p>注意力并不是 RNN 研究中唯一令人兴奋的话题。例如，<a href="http://arxiv.org/pdf/1507.01526v1.pdf"target="_blank" rel="external nofollow noopener noreferrer">Kalchbrenner等_人的 Grid LSTM。_(2015)<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>似乎非常有前途。在生成模型中使用 RNN——例如<a href="http://arxiv.org/pdf/1502.04623.pdf"target="_blank" rel="external nofollow noopener noreferrer">Gregor_等人。_(2015)<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a> ,<a href="http://arxiv.org/pdf/1506.02216v3.pdf"target="_blank" rel="external nofollow noopener noreferrer">钟_等人。_(2015)<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>或<a href="http://arxiv.org/pdf/1411.7610v3.pdf"target="_blank" rel="external nofollow noopener noreferrer">Bayer &amp; Osendorfer (2015)<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a> – 似乎也很有趣。过去几年对于递归神经网络来说是一个激动人心的时期，而即将到来的只会更加精彩！</p>]]></description>
</item>
<item>
  <title>使用LSTM对航班延误进行预测</title>
  <link>http://blog.579878700.xyz/lstm/</link>
  <pubDate>Sun, 16 Apr 2023 23:15:32 &#43;0800</pubDate>
  <author>map[avatar:/images/avatar.jpg email:&lt;nil&gt; link:&lt;nil&gt; name:waka]</author>
  <guid>http://blog.579878700.xyz/lstm/</guid>
  <description><![CDATA[<h1 id="使用lstm预测航班延误">使用LSTM预测航班延误</h1>
<h2 id="介绍">介绍</h2>
<p>航班延误是航空公司和乘客都不愿意面对的问题。在某些情况下，延误可能会导致航空公司的巨额损失，也会影响旅客的日常生活。因此，预测航班延误对于航空公司和旅客来说都非常重要。在本文中，我们将介绍如何使用LSTM来预测航班延误。</p>
<h2 id="数据收集和预处理">数据收集和预处理</h2>
<p>要预测航班延误，我们需要收集航班数据。我们可以从航空公司、机场网站或第三方数据提供商那里获取数据。在本文中，我们使用开放数据集“航班延误和取消数据”来预测航班延误。在收集数据后，我们需要对数据进行预处理。这包括清洗数据、处理缺失值和异常值等。我们还需要将数据转换为适合LSTM模型的形式。</p>
<p>这个是本文的例子中所用的数据集的来源：</p>
<h2 id="lstm模型构建和训练">LSTM模型构建和训练</h2>
<p>LSTM是一种适合于序列数据的深度学习模型，常用于时间序列预测。我们可以使用LSTM来预测航班延误。在构建LSTM模型之前，我们需要将数据集分为训练集和测试集。训练集用于训练模型，测试集用于评估模型的性能。在训练LSTM模型时，我们需要确定一些参数，如LSTM层数、神经元个数、迭代次数等。我们还需要选择合适的损失函数和优化器。在训练完模型后，我们可以使用测试集来评估模型的性能。</p>
<p>1.导入包</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">tensorflow.keras</span> <span class="kn">import</span> <span class="n">layers</span><span class="p">,</span><span class="n">models</span><span class="p">,</span><span class="n">optimizers</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">keras.models</span> <span class="kn">import</span> <span class="n">Sequential</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">tensorflow.keras.layers</span> <span class="kn">import</span> <span class="n">Dropout</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">keras.layers</span> <span class="kn">import</span> <span class="n">LSTM</span><span class="p">,</span><span class="n">Dense</span><span class="p">,</span><span class="n">Flatten</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">tensorflow.keras.losses</span> <span class="kn">import</span> <span class="n">MeanSquaredError</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">sklearn.preprocessing</span> <span class="kn">import</span> <span class="n">LabelEncoder</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">keras.callbacks</span> <span class="kn">import</span> <span class="n">EarlyStopping</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">tensorflow</span> <span class="k">as</span> <span class="nn">tf</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">os.path</span> <span class="kn">import</span> <span class="n">exists</span>
</span></span><span class="line"><span class="cl"><span class="err">!</span><span class="n">nvidia</span><span class="o">-</span><span class="n">smi</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">dirname</span><span class="p">,</span> <span class="n">_</span><span class="p">,</span> <span class="n">filenames</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">walk</span><span class="p">(</span><span class="s1">&#39;/kaggle/input&#39;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">filename</span> <span class="ow">in</span> <span class="n">filenames</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">dirname</span><span class="p">,</span> <span class="n">filename</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="p">[</span><span class="s1">&#39;CUDA_VISIBLE_DEVICES&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;0&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Thu Apr 13 16:28:46 2023
</span></span><span class="line"><span class="cl">+-----------------------------------------------------------------------------+
</span></span><span class="line"><span class="cl">| NVIDIA-SMI 470.161.03   Driver Version: 470.161.03   CUDA Version: 11.4     |
</span></span><span class="line"><span class="cl">|-------------------------------+----------------------+----------------------+
</span></span><span class="line"><span class="cl">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
</span></span><span class="line"><span class="cl">| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
</span></span><span class="line"><span class="cl">|                               |                      |               MIG M. |
</span></span><span class="line"><span class="cl">|===============================+======================+======================|
</span></span><span class="line"><span class="cl">|   0  Tesla P100-PCIE...  Off  | 00000000:00:04.0 Off |                    0 |
</span></span><span class="line"><span class="cl">| N/A   38C    P0    27W / 250W |      0MiB / 16280MiB |      0%      Default |
</span></span><span class="line"><span class="cl">|                               |                      |                  N/A |
</span></span><span class="line"><span class="cl">+-------------------------------+----------------------+----------------------+
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">+-----------------------------------------------------------------------------+
</span></span><span class="line"><span class="cl">| Processes:                                                                  |
</span></span><span class="line"><span class="cl">|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
</span></span><span class="line"><span class="cl">|        ID   ID                                                   Usage      |
</span></span><span class="line"><span class="cl">|=============================================================================|
</span></span><span class="line"><span class="cl">|  No running processes found                                                 |
</span></span><span class="line"><span class="cl">+-----------------------------------------------------------------------------+
</span></span><span class="line"><span class="cl">/kaggle/input/us-flight-delay-from-january-2017-july-2022/Airline_Delay_Cause.csv
</span></span><span class="line"><span class="cl">/kaggle/input/airlinedelay/Airline%20Delay.csv
</span></span><span class="line"><span class="cl">/kaggle/input/airline-delay-cause/Airline_Delay_Cause.csv
</span></span></code></pre></td></tr></table>
</div>
</div><p>2.导入数据集</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1">#导入数据集，分为大中小</span>
</span></span><span class="line"><span class="cl"><span class="c1"># df=pd.read_csv(&#39;/kaggle/input/us-flight-delay-from-january-2017-july-2022/Airline_Delay_Cause.csv&#39;)#mid</span>
</span></span><span class="line"><span class="cl"><span class="c1"># df=pd.read_csv(&#39;/kaggle/input/airline-delay-cause/Airline_Delay_Cause.csv&#39;)#big</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="o">=</span><span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;/kaggle/input/airlinedelay/Airline%20Delay.csv&#39;</span><span class="p">)</span><span class="c1">#small</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="o">.</span><span class="n">dropna</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>3.进行简单的数据预处理，这里我使用了中位数进行对每个特征求出对应的值</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># 首先通过 df[&#39;arr_cancelled&#39;]==0 这个条件筛选掉了所有 arr_cancelled 列中值为 1 的行，也就是已经取消的航班。</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_cancelled&#39;</span><span class="p">]</span><span class="o">==</span><span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 然后将 carrier_ct、weather_ct、nas_ct、security_ct 和 late_aircraft_ct 这五列重新赋值，除以 arr_flights 列对应行的值，计算每种延误类型对总到达航班数的占比</span>
</span></span><span class="line"><span class="cl"><span class="n">arrivingFlights</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_flights&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;carrier_ct&#39;</span><span class="p">]</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;carrier_ct&#39;</span><span class="p">]</span><span class="o">/</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_flights&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;weather_ct&#39;</span><span class="p">]</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;weather_ct&#39;</span><span class="p">]</span><span class="o">/</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_flights&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;nas_ct&#39;</span><span class="p">]</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;nas_ct&#39;</span><span class="p">]</span><span class="o">/</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_flights&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;security_ct&#39;</span><span class="p">]</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;security_ct&#39;</span><span class="p">]</span><span class="o">/</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_flights&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;late_aircraft_ct&#39;</span><span class="p">]</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;late_aircraft_ct&#39;</span><span class="p">]</span><span class="o">/</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_flights&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 接着，将 carrier_delay、weather_delay、security_delay 和 late_aircraft_delay 分别除以 arr_flights 对应行的值，计算每种延误类型对总延误时间的占比。</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;carrier_delay&#39;</span><span class="p">]</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;carrier_delay&#39;</span><span class="p">]</span><span class="o">/</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_flights&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;weather_delay&#39;</span><span class="p">]</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;weather_delay&#39;</span><span class="p">]</span><span class="o">/</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_flights&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;security_delay&#39;</span><span class="p">]</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;security_delay&#39;</span><span class="p">]</span><span class="o">/</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_flights&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;late_aircraft_delay&#39;</span><span class="p">]</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;late_aircraft_delay&#39;</span><span class="p">]</span><span class="o">/</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_flights&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 将 arr_delay 列除以 arr_flights 对应行的值，计算平均每个到达航班的延误时间。</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_delay&#39;</span><span class="p">]</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_delay&#39;</span><span class="p">]</span><span class="o">/</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_flights&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 计算 arr_delay 列的标准差和均值，然后求出阈值（threshhold），这里将阈值设为平均值加两倍标准差。</span>
</span></span><span class="line"><span class="cl"><span class="n">std</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_delay&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">std</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">mean</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_delay&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">threshhold</span><span class="o">=</span><span class="n">mean</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="n">std</span>
</span></span><span class="line"><span class="cl"><span class="nb">filter</span><span class="o">=</span><span class="p">((</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_delay&#39;</span><span class="p">]</span><span class="o">&lt;</span><span class="n">threshhold</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 最后根据阈值和 arr_delay 列的值进行筛选，将 arr_delay 列的值小于阈值的行保留，其余行删除，即剔除过度偏离平均水平的异常值，返回一个新的数据帧 df。</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="nb">filter</span><span class="p">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># 画图，延误的分钟，横坐标为时间序</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;carrier_delay&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">legend</span><span class="o">=</span><span class="s1">&#39;Carrier&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;weather_delay&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">legend</span><span class="o">=</span><span class="s1">&#39;Weather&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;security_delay&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">legend</span><span class="o">=</span><span class="s1">&#39;Security&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;late_aircraft_delay&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">legend</span><span class="o">=</span><span class="s1">&#39;Late&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;delay in minutes&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">legend</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 从这里我们可以看到，大多数的延误时间在10-15分钟，所以使用这个来判断航班是否延误</span>
</span></span></code></pre></td></tr></table>
</div>
</div><a class="lightgallery" href="https://s1.imagehub.cc/images/2023/07/25/__results___3_0.png" data-thumbnail="https://s1.imagehub.cc/images/2023/07/25/__results___3_0.png" data-sub-html="<h2>https://s1.imagehub.cc/images/2023/07/25/__results___3_0.png</h2>"></a>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># 差不多也是中位数</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;carrier_ct&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;nas_ct&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;security_ct&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;late_aircraft_ct&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><a class="lightgallery" href="https://s1.imagehub.cc/images/2023/07/25/__results___4_0.png" data-thumbnail="https://s1.imagehub.cc/images/2023/07/25/__results___4_0.png" data-sub-html="<h2>https://s1.imagehub.cc/images/2023/07/25/__results___4_0.png</h2>"></a>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># 航空公司计数</span>
</span></span><span class="line"><span class="cl"><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">carrier</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s2">&#34;carrier_name&#34;</span><span class="p">)[</span><span class="s1">&#39;carrier_name&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">transform</span><span class="p">(</span><span class="s1">&#39;size&#39;</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">9</span><span class="p">][</span><span class="s2">&#34;carrier_name&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">carrier</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s2">&#34;bar&#34;</span><span class="p">,</span><span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s2">&#34;Carrier Flight counts&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><a class="lightgallery" href="https://s1.imagehub.cc/images/2023/07/25/__results___5_0.png" data-thumbnail="https://s1.imagehub.cc/images/2023/07/25/__results___5_0.png" data-sub-html="<h2>https://s1.imagehub.cc/images/2023/07/25/__results___5_0.png</h2>"></a>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># 机场计数</span>
</span></span><span class="line"><span class="cl"><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">flights</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s2">&#34;airport&#34;</span><span class="p">)[</span><span class="s1">&#39;airport&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">transform</span><span class="p">(</span><span class="s1">&#39;size&#39;</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">9</span><span class="p">][</span><span class="s2">&#34;airport&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">flights</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s2">&#34;bar&#34;</span><span class="p">,</span><span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s2">&#34;Airport Flight counts&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><a class="lightgallery" href="https://s1.imagehub.cc/images/2023/07/25/__results___6_0.png" data-thumbnail="https://s1.imagehub.cc/images/2023/07/25/__results___6_0.png" data-sub-html="<h2>https://s1.imagehub.cc/images/2023/07/25/__results___6_0.png</h2>"></a>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">encoder</span><span class="o">=</span><span class="n">LabelEncoder</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 删掉没有用的列</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;carrier&#39;</span><span class="p">]</span><span class="o">=</span><span class="n">encoder</span><span class="o">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;carrier&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;airport&#39;</span><span class="p">]</span><span class="o">=</span><span class="n">encoder</span><span class="o">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;airport&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="s2">&#34;airport_name&#34;</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">df</span><span class="o">.</span><span class="n">drop</span><span class="p">([</span><span class="s2">&#34;arr_del15&#34;</span><span class="p">,</span><span class="s2">&#34;arr_cancelled&#34;</span><span class="p">,</span><span class="s2">&#34;year&#34;</span><span class="p">,</span> <span class="s2">&#34;airport_name&#34;</span><span class="p">,</span><span class="s2">&#34;carrier_name&#34;</span><span class="p">,</span><span class="s2">&#34;nas_delay&#34;</span><span class="p">,],</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 对数据进行二分处理，若某条数据中的延误时间大于 10 分钟，这一列对应的值被标记为 1，否则标记为 0。这样处理之后，这三列数据变成了二分类变量。</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">arr_delay_columns</span><span class="p">(</span><span class="n">row</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">row</span><span class="p">[</span><span class="s1">&#39;arr_delay&#39;</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">10</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="n">arr_delay_columns</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">late_aircraft_delay_columns</span><span class="p">(</span><span class="n">row</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">row</span><span class="p">[</span><span class="s1">&#39;late_aircraft_delay&#39;</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">10</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">carrier_delay_columns</span><span class="p">(</span><span class="n">row</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">row</span><span class="p">[</span><span class="s1">&#39;carrier_delay&#39;</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">10</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="c1"># 画图 可以看到延误的航班大约占30%</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;delay mean:&#34;</span><span class="p">,</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_delay&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">(),</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;arr_delay&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;late_aircraft_delay mean:&#34;</span><span class="p">,</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;late_aircraft_delay&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">(),</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;late_aircraft_delay&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;carrier_delay mean:&#34;</span><span class="p">,</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;carrier_delay&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">(),</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;carrier_delay&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;late_aircraft_delay&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="n">late_aircraft_delay_columns</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;carrier_delay&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="n">carrier_delay_columns</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">counts</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s2">&#34;label&#34;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">total</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s2">&#34;label&#34;</span><span class="p">]</span><span class="o">.</span><span class="n">count</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">percents</span> <span class="o">=</span> <span class="n">counts</span> <span class="o">/</span> <span class="n">total</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">pie</span><span class="p">(</span><span class="n">percents</span><span class="p">,</span> <span class="n">labels</span><span class="o">=</span><span class="n">percents</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">autopct</span><span class="o">=</span><span class="s1">&#39;</span><span class="si">%1.1f%%</span><span class="s1">&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">{}</span><span class="s1"> distribution&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="s2">&#34;label&#34;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">delay</span> <span class="n">mean</span><span class="p">:</span> <span class="mf">8.184618800493773</span> <span class="mf">28.467741935483872</span>
</span></span><span class="line"><span class="cl"><span class="n">late_aircraft_delay</span> <span class="n">mean</span><span class="p">:</span> <span class="mf">2.7714400135202206</span> <span class="mf">24.285714285714285</span>
</span></span><span class="line"><span class="cl"><span class="n">carrier_delay</span> <span class="n">mean</span><span class="p">:</span> <span class="mf">3.2955479971538186</span> <span class="mf">26.5</span>
</span></span></code></pre></td></tr></table>
</div>
</div><a class="lightgallery" href="https://s1.imagehub.cc/images/2023/07/25/__results___7_1.png" data-thumbnail="https://s1.imagehub.cc/images/2023/07/25/__results___7_1.png" data-sub-html="<h2>https://s1.imagehub.cc/images/2023/07/25/__results___7_1.png</h2>"></a>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># 分割数据集，训练集和验证集</span>
</span></span><span class="line"><span class="cl"><span class="n">X_columns</span><span class="o">=</span><span class="p">[</span><span class="n">x</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">x</span> <span class="ow">in</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">,</span><span class="s1">&#39;arr_delay&#39;</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">X</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="n">X_columns</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">y</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">X_columns</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">X_train</span><span class="p">,</span> <span class="n">X_test</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">y_test</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span> <span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">test_size</span><span class="o">=</span><span class="mf">0.22</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="s1">&#39;month&#39;</span><span class="p">,</span> <span class="s1">&#39;carrier&#39;</span><span class="p">,</span> <span class="s1">&#39;airport&#39;</span><span class="p">,</span> <span class="s1">&#39;arr_flights&#39;</span><span class="p">,</span> <span class="s1">&#39;carrier_ct&#39;</span><span class="p">,</span> <span class="s1">&#39;weather_ct&#39;</span><span class="p">,</span> <span class="s1">&#39;nas_ct&#39;</span><span class="p">,</span> <span class="s1">&#39;security_ct&#39;</span><span class="p">,</span> <span class="s1">&#39;late_aircraft_ct&#39;</span><span class="p">,</span> <span class="s1">&#39;arr_diverted&#39;</span><span class="p">,</span> <span class="s1">&#39;carrier_delay&#39;</span><span class="p">,</span> <span class="s1">&#39;weather_delay&#39;</span><span class="p">,</span> <span class="s1">&#39;security_delay&#39;</span><span class="p">,</span> <span class="s1">&#39;late_aircraft_delay&#39;</span><span class="p">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1">#建立LSTM模型</span>
</span></span><span class="line"><span class="cl"><span class="n">lookback</span><span class="o">=</span><span class="mi">6</span>
</span></span><span class="line"><span class="cl"><span class="n">n_features</span><span class="o">=</span><span class="nb">len</span><span class="p">(</span><span class="n">X_columns</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># inputs = layers.Input((lookback, n_features), dtype=&#34;float32&#34;)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># x = layers.LSTM(200, activation=&#39;tanh&#39;, return_sequences=True)(inputs)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># x = layers.BatchNormalization()(x)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># x = layers.Dropout(0.25)(x)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># x = layers.LSTM(200, activation=&#39;tanh&#39;, return_sequences=False)(x)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># x = layers.BatchNormalization()(x)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># x = layers.Dropout(0.25)(x)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># x = layers.Dense(100, activation=&#39;relu&#39;)(x)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># outputs = layers.Dense(1, activation=&#39;sigmoid&#39;)(x)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">inputs</span> <span class="o">=</span> <span class="n">layers</span><span class="o">.</span><span class="n">Input</span><span class="p">((</span><span class="n">lookback</span><span class="p">,</span> <span class="n">n_features</span><span class="p">),</span><span class="n">dtype</span><span class="o">=</span><span class="s2">&#34;float32&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">lstm1</span> <span class="o">=</span> <span class="n">layers</span><span class="o">.</span><span class="n">LSTM</span><span class="p">(</span><span class="mi">128</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s1">&#39;tanh&#39;</span><span class="p">,</span> <span class="n">return_sequences</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">lstm2</span> <span class="o">=</span> <span class="n">layers</span><span class="o">.</span><span class="n">LSTM</span><span class="p">(</span><span class="mi">64</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s1">&#39;tanh&#39;</span><span class="p">,</span> <span class="n">return_sequences</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">batch1</span> <span class="o">=</span> <span class="n">layers</span><span class="o">.</span><span class="n">BatchNormalization</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">dropout1</span> <span class="o">=</span> <span class="n">layers</span><span class="o">.</span><span class="n">Dropout</span><span class="p">(</span><span class="mf">0.2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">dense1</span> <span class="o">=</span> <span class="n">layers</span><span class="o">.</span><span class="n">Dense</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">dense2</span> <span class="o">=</span> <span class="n">layers</span><span class="o">.</span><span class="n">Dense</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">output</span> <span class="o">=</span> <span class="n">layers</span><span class="o">.</span><span class="n">Dense</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">activation</span><span class="o">=</span><span class="s2">&#34;sigmoid&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">out</span> <span class="o">=</span> <span class="n">lstm1</span><span class="p">(</span><span class="n">inputs</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">out</span> <span class="o">=</span> <span class="n">lstm2</span><span class="p">(</span><span class="n">out</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">out</span> <span class="o">=</span> <span class="n">batch1</span><span class="p">(</span><span class="n">out</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">out</span> <span class="o">=</span> <span class="n">dense1</span><span class="p">(</span><span class="n">out</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">out</span> <span class="o">=</span> <span class="n">dropout1</span><span class="p">(</span><span class="n">out</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">out</span> <span class="o">=</span> <span class="n">dense2</span><span class="p">(</span><span class="n">out</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">outputs</span> <span class="o">=</span> <span class="n">output</span><span class="p">(</span><span class="n">out</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#model = models.Model(inputs=inputs, outputs=outputs)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">model</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">(</span><span class="n">inputs</span><span class="p">,</span> <span class="n">outputs</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">optimizer</span> <span class="o">=</span> <span class="n">optimizers</span><span class="o">.</span><span class="n">Adam</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">model</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">optimizer</span><span class="o">=</span><span class="n">optimizer</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">loss</span><span class="o">=</span><span class="s1">&#39;binary_crossentropy&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#loss=MeanSquaredError(reduction=&#34;auto&#34;, name=&#34;mean_squared_error&#34;),</span>
</span></span><span class="line"><span class="cl">    <span class="n">weighted_metrics</span><span class="o">=</span><span class="p">[</span><span class="s2">&#34;acc&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">model</span><span class="o">.</span><span class="n">summary</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">es</span> <span class="o">=</span> <span class="n">EarlyStopping</span><span class="p">(</span><span class="n">monitor</span><span class="o">=</span><span class="s2">&#34;val_loss&#34;</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s2">&#34;min&#34;</span><span class="p">,</span> <span class="n">verbose</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">patience</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 转换数据格式，输入数据 X 和标签 y 分别转换为 np.array 格式，并使用 .astype(np.float32) 将数据类型转为浮点数类型。</span>
</span></span><span class="line"><span class="cl"><span class="n">X2_train</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">X_train</span><span class="p">)</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">X2_train</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">resize</span><span class="p">(</span><span class="n">X2_train</span><span class="p">,(</span><span class="n">X2_train</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="n">lookback</span><span class="p">,</span><span class="n">X2_train</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span>
</span></span><span class="line"><span class="cl"><span class="n">y2_train</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">y_train</span><span class="p">)</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">X2_test</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">X_test</span><span class="p">)</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">X2_test</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">resize</span><span class="p">(</span><span class="n">X2_test</span><span class="p">,(</span><span class="n">X2_test</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="n">lookback</span><span class="p">,</span><span class="n">X2_test</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span>
</span></span><span class="line"><span class="cl"><span class="n">y2_test</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">y_test</span><span class="p">)</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">path_to_file</span><span class="o">=</span><span class="s2">&#34;/kaggle/working/lstm3.h5&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">file_exists</span> <span class="o">=</span> <span class="n">exists</span><span class="p">(</span><span class="n">path_to_file</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="n">file_exists</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">model</span><span class="o">.</span><span class="n">load_weights</span><span class="p">(</span><span class="n">path_to_file</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Fit data</span>
</span></span><span class="line"><span class="cl"><span class="n">history</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">X2_train</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">y2_train</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">epochs</span><span class="o">=</span><span class="mi">200</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">validation_data</span><span class="o">=</span><span class="p">(</span><span class="n">X2_test</span><span class="p">,</span> <span class="n">y2_test</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># verbose=0,</span>
</span></span><span class="line"><span class="cl">    <span class="n">shuffle</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#callbacks=[es],</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">model</span><span class="o">.</span><span class="n">save_weights</span><span class="p">(</span><span class="n">path_to_file</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># 训练loss</span>
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">history</span><span class="o">.</span><span class="n">history</span><span class="p">[</span><span class="s2">&#34;loss&#34;</span><span class="p">],</span><span class="n">label</span><span class="o">=</span><span class="s2">&#34;Train Loss&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">history</span><span class="o">.</span><span class="n">history</span><span class="p">[</span><span class="s2">&#34;val_loss&#34;</span><span class="p">],</span><span class="n">label</span><span class="o">=</span><span class="s2">&#34;Validation Loss&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s2">&#34;Loss vs Epochs&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s2">&#34;Epochs&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s2">&#34;Loss&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">legend</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><a class="lightgallery" href="https://s1.imagehub.cc/images/2023/07/25/__results___11_0.png" data-thumbnail="https://s1.imagehub.cc/images/2023/07/25/__results___11_0.png" data-sub-html="<h2>https://s1.imagehub.cc/images/2023/07/25/__results___11_0.png</h2>"></a>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">y_pred</span><span class="o">=</span><span class="n">model</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">X2_train</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">y_pred</span><span class="o">=</span><span class="p">[</span><span class="nb">float</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">if</span> <span class="n">x</span><span class="o">&gt;</span><span class="mf">0.5</span> <span class="k">else</span> <span class="mi">0</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">y_pred</span><span class="p">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>43/43 [==============================] - 1s 3ms/step</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">legend_labels</span><span class="o">=</span><span class="p">[</span><span class="s2">&#34;Prediction&#34;</span><span class="p">,</span><span class="s2">&#34;Train&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">colors</span><span class="o">=</span><span class="p">[</span><span class="s2">&#34;Blue&#34;</span><span class="p">,</span><span class="s2">&#34;Red&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">units</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">100</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">stackplot</span><span class="p">(</span><span class="n">units</span><span class="p">,</span><span class="n">y_pred</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">100</span><span class="p">],[</span><span class="mi">1</span> <span class="k">if</span> <span class="n">y</span><span class="o">&gt;</span><span class="mf">0.5</span> <span class="k">else</span> <span class="mi">0</span> <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="n">y_train</span><span class="p">][</span><span class="mi">0</span><span class="p">:</span><span class="mi">100</span><span class="p">],</span><span class="n">labels</span><span class="o">=</span><span class="n">legend_labels</span><span class="p">,</span><span class="n">colors</span><span class="o">=</span><span class="n">colors</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">max</span><span class="p">(</span><span class="n">y_train</span><span class="p">))</span>
</span></span></code></pre></td></tr></table>
</div>
</div><a class="lightgallery" href="https://s1.imagehub.cc/images/2023/07/25/__results___13_1.png" data-thumbnail="https://s1.imagehub.cc/images/2023/07/25/__results___13_1.png" data-sub-html="<h2>https://s1.imagehub.cc/images/2023/07/25/__results___13_1.png</h2>"></a>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">accuracy</span><span class="p">(</span><span class="n">predictions</span><span class="p">,</span> <span class="n">labels</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">correct</span><span class="o">=</span><span class="mi">0</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">index</span><span class="p">,</span><span class="n">x</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">predictions</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">predictions</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="o">==</span> <span class="n">labels</span><span class="p">[</span><span class="n">index</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">            <span class="n">correct</span><span class="o">+=</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="p">(</span><span class="mf">100.0</span> <span class="o">*</span> <span class="n">correct</span>
</span></span><span class="line"><span class="cl">           <span class="o">/</span> <span class="nb">len</span><span class="p">(</span><span class="n">predictions</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;accuracy: &#34;</span><span class="p">,</span><span class="n">accuracy</span><span class="p">(</span><span class="n">y_pred</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">100</span><span class="p">],[</span><span class="mi">1</span> <span class="k">if</span> <span class="n">y</span><span class="o">&gt;</span><span class="mf">0.5</span> <span class="k">else</span> <span class="mi">0</span> <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="n">y_train</span><span class="p">][</span><span class="mi">0</span><span class="p">:</span><span class="mi">100</span><span class="p">]))</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>accuracy: 90.0</p>
<h2 id="模型预测和评估">模型预测和评估</h2>
<p>在模型训练完成后，我们可以使用该模型来预测航班延误。我们可以将实时数据输入到模型中，模型将输出延误的概率。我们还可以使用各种指标来评估模型的性能，如平均绝对误差、均方误差等。如果模型的性能不够好，我们可以尝试调整模型参数、增加训练数据等方法来提高模型性能。</p>
<h2 id="总结">总结</h2>
<p>本文介绍了如何使用LSTM来预测航班延误。我们需要收集和预处理数据，构建和训练LSTM模型，使用模型预测和评估模型性能。预测航班延误对于航空公司和旅客都非常重要，希望这篇文章能够帮助你了解如何使用LSTM来预测航班延误。</p>]]></description>
</item>
<item>
  <title>零知识机器学习（ZKML）简介</title>
  <link>http://blog.579878700.xyz/zkml/</link>
  <pubDate>Thu, 06 Apr 2023 17:46:33 &#43;0800</pubDate>
  <author>map[avatar:/images/avatar.jpg email:&lt;nil&gt; link:&lt;nil&gt; name:waka]</author>
  <guid>http://blog.579878700.xyz/zkml/</guid>
  <description><![CDATA[<h1 id="零知识机器学习zkml简介">零知识机器学习（ZKML）简介</h1>
<p>Zero-Knowledge 机器学习（ZKML）是最近正在密码学界引起轰动的一个研究和开发领域。但它是什么，有什么用处呢？首先，让我们把这个术语分解成它的两个组成部分，并解释一下它们是什么。</p>
<h2 id="什么是-zk">什么是 ZK？</h2>
<p>零知识证明是一种密码协议，其中一方（证明者）可以向另一方（验证者）证明一个给定的陈述是真实的，而不泄露除该陈述为真以外的任何附加信息。这是一个正在各个方面取得巨大进展的研究领域，涵盖了从研究到协议实施和应用的所有方面。</p>
<p>ZK 提供的两个主要“原语”（或者说构建块）是能够为一组给定的计算创建具有计算完整性证明的能力，其中证明比执行计算本身要容易地多。（我们称这种属性为“简洁性”）。ZK 证明也提供了隐藏计算中某些部分同时保持计算正确性的选项。（我们称这种属性为“零知识性”）。</p>
<p><strong>生成零知识证明需要非常大的计算量，大约比原始计算贵 100 倍</strong>。这意味着，在某些情况下由于最佳硬件上生成它们所需的时间使其不切实际，因此不能计算零知识证明。</p>
<p>然而，在近年来密码学、硬件和分布式系统领域的进步已经使零知识证明成为了越来越强大的计算可行的选择。这些进展已经为可以使用计算密集型证明的协议的创建提供了可能，从而扩大了新应用程序的设计空间。</p>
<p><strong>ZK 使用案例</strong></p>
<p>零知识密码学是 Web3 空间中最流行的技术之一，因为它允许开发人员构建可扩展和/或私有的应用程序。以下是一些实践中如何使用它的示例（尽管请注意，这些项目中许多都还在进行中）：</p>
<p><strong>1.通过 ZK rollups 扩展以太坊</strong></p>
<ul>
<li>Starknet</li>
<li>Scroll</li>
<li>Polygon Zero，Polygon Miden，Polygon zkEVM</li>
<li>zkSync</li>
</ul>
<p><strong>2.构建保护隐私的应用程序</strong></p>
<ul>
<li>Semaphore</li>
<li>MACI</li>
<li>Penumbra</li>
<li>Aztec Network</li>
</ul>
<p><strong>3.身份原语和数据来源</strong></p>
<ul>
<li>WorldID</li>
<li>Sismo</li>
<li>Clique</li>
<li>Axiom</li>
</ul>
<p><strong>4.第一层协议</strong></p>
<ul>
<li>Zcash</li>
<li>Mina</li>
</ul>
<p>随着 ZK 技术的成熟，我们相信将会出现新的应用程序的爆发，因为构建这些应用程序所使用的工具将需要更少的领域专业知识，对于开发人员来说将会更加容易使用。</p>
<h2 id="zkml-的动机和当前的努力">ZKML 的动机和当前的努力</h2>
<p>我们生活在一个世界上，<strong>AI/ML 生成的内容越来越难以与人类生成的内容区分开来</strong>。零知识密码学将使我们能够做出这样的声明：“给定一段内容 C，它是由模型 M 应用于一些输入 X 生成的。”我们将能够验证某个输出是否是由大型语言模型（如 chatGPT）或文本到图像模型（如 DALL-E 2）等任何其他我们为其创建了零知识电路表示的模型所生成的。这些证明的零知识属性将使我们能够根据需要也隐藏输入或模型的某些部分。一个很好的例子是在一些敏感数据上应用机器学习模型，在不透露输入到第三方的情况下，用户可以知道他们的数据在模型推理后的结果（例如，在医疗行业）。</p>
<p>注：当我们谈论 ZKML 时，我们是指创建 ML 模型推理步骤的零知识证明，而不是关于 ML 模型训练（它本身已经非常计算密集）。目前，现有技术水平的零知识系统加上高性能硬件仍然相差几个数量级，无法证明当前可用的大型语言模型（LLMs）等庞大的模型，但是在创建较小模型的证明方面已经取得了一些进展。</p>
<p>我们对零知识密码学在为 ML 模型创建证明的上下文中的现有技术水平进行了一些研究，并创建了一个聚合相关研究、文章、应用程序和代码库的文章集。ZKML 的资源可以在 GitHub 上的 ZKML 社区的 <a href="https://github.com/zkml-community/awesome-zkml"target="_blank" rel="external nofollow noopener noreferrer">awesome-zkml<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a> 存储库中找到。</p>
<p><a href="https://www.moduluslabs.xyz/"target="_blank" rel="external nofollow noopener noreferrer">Modulus Labs<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a> 团队最近发布了一篇名为“<a href="https://medium.com/@ModulusLabs/chapter-5-the-cost-of-intelligence-da26dbf93307"target="_blank" rel="external nofollow noopener noreferrer">智能的成本<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>”的论文，其中对现有的 ZK 证明系统进行了基准测试，并列举了不同大小的多个模型。目前，使用像 <a href="https://polygon.technology/blog/plonky2-a-deep-dive"target="_blank" rel="external nofollow noopener noreferrer">plonky2 <i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>这样的证明系统，在强大的 AWS 机器上运行 50 秒左右，可以为约 1800 万个参数的模型创建证明。以下是该论文中的一张图表：</p>
<p>另一个旨在改进 ZKML 系统技术水平的倡议是 Zkonduit 的 <a href="https://github.com/zkonduit/ezkl"target="_blank" rel="external nofollow noopener noreferrer">ezkl<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a> 库，它允许您创建对使用 ONNX 导出的 ML 模型的 ZK 证明。这使得任何 ML 工程师都能够为他们的模型的推理步骤创建 ZK 证明，并向任何正确实现的验证器证明输出。</p>
<p>有几个团队正在改进 ZK 技术，为 ZK 证明内部发生的操作创建优化硬件，并针对特定用例构建这些协议的优化实现。随着技术的成熟，更大的模型将在较不强大的机器上短时间内进行 ZK 证明。我们希望这些进展将使新的 ZKML 应用程序和用例得以出现。</p>
<a class="lightgallery" href="https://hx24-prod.mars-block.com/image/crawler/2023/04/06/1680766766002460.jpg" data-thumbnail="https://hx24-prod.mars-block.com/image/crawler/2023/04/06/1680766766002460.jpg" data-sub-html="<h2>https://hx24-prod.mars-block.com/image/crawler/2023/04/06/1680766766002460.jpg</h2>"></a>
<h2 id="潜在的使用案例">潜在的使用案例</h2>
<p>为了确定 ZKML 是否适用于特定的应用，我们可以考虑 ZK 密码学的特性将如何解决与机器学习相关的问题。这可以用一个 Venn 图来说明：</p>
<a class="lightgallery" href="https://hx24-prod.mars-block.com/image/crawler/2023/04/06/1680766766002404.jpg" data-thumbnail="https://hx24-prod.mars-block.com/image/crawler/2023/04/06/1680766766002404.jpg" data-sub-html="<h2>https://hx24-prod.mars-block.com/image/crawler/2023/04/06/1680766766002404.jpg</h2>"></a>
<p>定义：</p>
<p><strong>1.Heuristic optimization</strong><a href="https://en.wikipedia.org/wiki/Heuristic_%28computer_science%29"target="_blank" rel="external nofollow noopener noreferrer"><strong>启发式优化</strong><i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>—— 一种问题解决方法，它使用经验法则或“启发式”来找到艰难的问题的好解决方案，而不是使用传统的优化方法。启发式优化方法旨在在相对的重要性和优化难度下，在合理的时间内找到好的或“足够好”的解决方案，而不是尝试找到最优解决方案。</p>
<p><strong>2.FHE ML</strong><a href="https://en.wikipedia.org/wiki/Homomorphic_encryption"target="_blank" rel="external nofollow noopener noreferrer">全同态加密<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>—— 完全同态加密ML允许开发人员以保护隐私的方式训练和评估模型；然而，与ZK证明不同，没有办法通过密码学方式证明所执行的计算的正确性。</p>
<ul>
<li>像 <a href="https://www.zama.ai/"target="_blank" rel="external nofollow noopener noreferrer">Zama.ai<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>这样的团队正在从事这个领域的工作。</li>
</ul>
<p><strong>3.ZK vs Validity</strong> —— 在行业中，这些术语通常被互换使用，因为有效性证明是ZK证明，不会隐藏计算或其结果的某些部分。在ZKML的上下文中，大多数当前的应用程序都利用了ZK证明的有效性证明方面。</p>
<p><strong>4.Validity ML</strong> —— ZK证明ML模型，在其中没有计算或结果被保密。它们证明计算的正确性。</p>
<p>以下是一些潜在的 ZKML 用例示例：</p>
<p>1.计算完整性（有效性 ML）</p>
<ul>
<li>Modulus Labs<a href="https://www.moduluslabs.xyz/"target="_blank" rel="external nofollow noopener noreferrer">模量实验室<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
<li>基于链上可验证的 ML 交易机器人 - <a href="https://github.com/Modulus-Labs/RockyBot"target="_blank" rel="external nofollow noopener noreferrer">RockyBot<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
</ul>
<p>自我改进视觉区块链（示例）：</p>
<ul>
<li>增强 Lyra 金融期权协议 AMM 的智能特性<a href="https://www.lyra.finance/"target="_blank" rel="external nofollow noopener noreferrer">Lyra 金融期权协议 AMM<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
<li>为 <a href="https://www.astraly.xyz/"target="_blank" rel="external nofollow noopener noreferrer">Astraly<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>  创建透明的基于 AI 的声誉系统（ZK oracle）</li>
<li>使用<a href="https://aztec.network/"target="_blank" rel="external nofollow noopener noreferrer"> ML for Aztec Protocol<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>（具有隐私功能的 zk-rollup）致力于合同级合规工具所需的技术突破。</li>
</ul>
<p>2.<a href="https://twitter.com/daniel_d_kang/status/1582519854405255168?s=20&amp;t=16FXZixQvD5G_B9IFVzmaA"target="_blank" rel="external nofollow noopener noreferrer">机器学习即服务<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>(MLaaS) 透明；</p>
<p>3.ZK 异常/欺诈检测：</p>
<ul>
<li>这种应用场景使得可创建针对<a href="https://blog.trailofbits.com/2020/05/21/reinventing-vulnerability-disclosure-using-zero-knowledge-proos/"target="_blank" rel="external nofollow noopener noreferrer">允许为可利用性<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>/欺诈的 ZK 证明成为可能。异常检测模型可以在智能合约数据上进行训练，并由 DAOs 同意作为有趣的度量标准，以便能够自动化安全程序，如更主动、预防性地暂停合约。已有初创企业正在研究在智能合约环境中使用 ML 模型进行安全目的的方法，因此 ZK 异常检测证明似乎是自然的下一步。</li>
</ul>
<p>4.ML 推理的通用有效性证明：能够轻松证明和验证输出是给定模型和输入对的乘积。</p>
<p>5.隐私 (ZKML)。</p>
<p>6.去中心化的 <a href="https://www.kaggle.com/"target="_blank" rel="external nofollow noopener noreferrer">Kaggle<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>：证明模型在某些测试数据上的准确率大于 x%，而不会显示权重。</p>
<p>7.隐私保护推理：将对私人患者数据的医疗诊断输入模型，并将敏感的推理（例如，癌症测试结果）发送给患者。（来源：<a href="https://eprint.iacr.org/2020/584.pdf"target="_blank" rel="external nofollow noopener noreferrer">vCNN 论文<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>，第 2/16 页）</p>
<p>8.Worldcoin：</p>
<ul>
<li><strong>IrisCode 的可升级性</strong>：<a href="https://id.worldcoin.org/"target="_blank" rel="external nofollow noopener noreferrer">World ID<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a> 用户将能够在他们的移动设备的加密存储中自我保管其生物特征，下载用于生成 IrisCode 的 ML 模型并在本地创建零知识证明，以证明其 IrisCode 已成功创建。这个 IrisCode 可以被无需许可地插入注册的 Worldcoin 用户之一，因为接收的智能合约可以验证零知识证明，从而验证 IrisCode 的创建。这意味着，如果 Worldcoin 将来升级机器学习模型以一种破坏与其之前版本兼容性的方式创建 IrisCode，用户就不必再次去 Orb，而可以在设备上本地创建这个零知识证明。</li>
<li><strong>Orb 安全性</strong>：目前，Orb 在其受信任的环境中执行几个欺诈和篡改检测机制。然而，我们可以创建一个零知识证明，表明这些机制在拍摄图像和生成 IrisCode 时是活动的，以便为 Worldcoin 协议提供更好的活体保证，因为我们可以完全确定这些机制在整个 IrisCode 生成过程中都将运行。</li>
</ul>
<p>总之，ZKML 技术有着广泛的应用前景，并且正在快速发展。随着越来越多的团队和个人加入到这个领域，我们相信 ZKML 的应用场景将会更加多样化和广泛化。</p>]]></description>
</item>
<item>
  <title>在超级账本Hyperledger Fabric中开发智能合约遇到的问题</title>
  <link>http://blog.579878700.xyz/fabric_bug/</link>
  <pubDate>Wed, 22 Mar 2023 16:11:51 &#43;0800</pubDate>
  <author>map[avatar:/images/avatar.jpg email:&lt;nil&gt; link:&lt;nil&gt; name:waka]</author>
  <guid>http://blog.579878700.xyz/fabric_bug/</guid>
  <description><![CDATA[<h2 id="1-不要尝试获取节点本地的时间作为key或value的值">1. 不要尝试获取节点本地的时间作为key或value的值</h2>
<p>即使每个节点的本地的时间系统是经过校对一致的，但同一个交易在每个节点上执行的时间点不一定是相同的。如果使用time.now().unix()来取节点本地的时间作为key或value的值，会导致每个节点执行同一个交易的结果不一致，从而造成交易失败。正确的做法是使用函数GetTxTimestamp()来获取交易的时间。每个节点通过函数GetTxTimestamp()来获取到的交易时间是相同的<br>
例子：<br>
t, err := stub.GetTxTimestamp()<br>
t.Seconds // 交易的时间，unix时间戳，精确到秒<br>
t.Nanos// 交易的时间，unix时间戳，精确到纳秒<br>
time.Unix(t.Seconds, int64(t.Nanos)).UnixNano() / 1e6 // 交易的时间，unix时间戳，精确到毫秒</p>
<p>但需要注意的是，每个节点通过函数GetTxTimestamp()来获取到的交易时间是相同的，但它取到的时间是客户端创建交易时的本地时间。如果客户端的本地时间没有校准的话，GetTxTimestamp()获取到的交易时间也是不准确的。</p>
<h2 id="2-在同一个区块里多笔交易对同一键进行更新">2. 在同一个区块里多笔交易对同一键进行更新</h2>
<p>对同一键进行更新的一个或多笔交易打包到同一块中，只有第1笔交易会成功，后面的交易会失败。相关的原因是：在一个区块里的多笔交易，只有在区块被提交后才会真正生效。而每一个键值都有版本号，假设一个键“key_1”在本个区块提交前的版本号为9，然后在本个区块里有2笔交易分别更新键&quot;key_1&quot;的值为&quot;123&quot;和&quot;456&quot;。那么当第1笔交易更新键“key_1”的值时，键&quot;key_1&quot;的版本号在本个区块里将更新为10，但在本区块未提交前，真正生效的版本号还是9。而当执行第2笔交易时，该交易读取到键&quot;key_1&quot;的版本号还是9，这样第2笔交易还是把键&quot;key_1&quot;的版本号更新为10，这样系统会判断为“双花”行为，从而引起冲突，导致只有第1笔交易会执行成功，第2笔交易执行失败。具体可以参考这篇文章 <a href="https://learnblockchain.cn/article/620"target="_blank" rel="external nofollow noopener noreferrer">https://learnblockchain.cn/article/620<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a><br>
简单地说，在同一个区块里多笔交易对同一键进行PutState()更新时，只有一笔交易是成功的，其它的交易会出现 MVCC_READ_CONFLICT报错。<br>
因此，试图在fabric合约里创建全局的计数器是一件不可靠的事情。</p>
<h2 id="3-在同一个区块里多笔交易先后对同一个键进行更新和读取">3. 在同一个区块里多笔交易先后对同一个键进行更新和读取</h2>
<p>假设在一个区块里有2笔交易，第1笔交易对键&quot;key_1&quot;值更新为&quot;123&quot;，第2笔交易尝试读取键&quot;key_1&quot;的值，结果第2笔交易读键&quot;key_1&quot;的值结果为空。原因上面已经提及到，一个区块里的多笔交易，只有在区块被提交后才会真正生效。</p>
<h2 id="4-在一个方法内对同一个键先写后读">4. 在一个方法内对同一个键先写后读</h2>
<p>在一个方法内对同一个键先进行写键值（putState()），然后再进行读键值（getState()），会发现前面的putState操作没有生效，原因也是同前面一样的道理</p>
<h2 id="5-尝试通过合约使用加密算法对信息进行加密">5. 尝试通过合约使用加密算法对信息进行加密</h2>
<p>有些加密算法对同样内容的信息进行加密，有可能每次加密的结果是不一样的。例如：RSA公钥对同一数据加密，每次的结果都不一样。这样会导致不同的节点执行加密的结果不一样，从而导致提交的内容不一致，造成交易失败</p>
<h2 id="6-没有了解query和invoke的合约函数调用方式">6. 没有了解query和invoke的合约函数调用方式</h2>
<p>超级账本调用合约函数的方式有2种：query和invoke<br>
通过query方式调用合约函数，只能查询链上数据，不能向链上写数据，并且不产生交易<br>
通过invoke方式调用合约函数，可以向链上写数据，并产生交易</p>
<p>如果一个合约函数里调用了PutState()操作，但是通过query方式来调用该合约函数，虽然不会报错，但PutState()操作实际没有生效，世界状态不会被改变</p>
<p>如果一个合约函数里没有调用PutState()操作，但是通过invoke方式来调用该合约函数，虽然不会报错，但却会产生交易</p>
<h2 id="7-使用couchdb在使用select语句时没有对select的字段建立索引">7. 使用CouchDB，在使用select语句时没有对select的字段建立索引</h2>
<p>超级账本可以使用Leveldb或CouchDB。如果要支持富查询，一般会选择使用CouchDB。CouchDB可以支持类似于SQL的select语句来实现富查询。但是CouchDB的效率并不高，在不建立索引的情况下，可能对2-3万条的数据使用select语句就会导致查询非常耗时，从而导致合约函数的执行超时而失败。而对于传统的关系型数据库，2-3万条的数据量，在不建立索引的情况下，对查询的影响不是很明显。</p>
<p>例如下面的select语句：<br>
&ldquo;{&ldquo;selector&rdquo;:{&ldquo;StudentAge&rdquo;:{&quot;$lte&rdquo;: 10}, &ldquo;sort&rdquo;:[{&ldquo;RegisterTime&rdquo;: &ldquo;asc&rdquo;}]}}&quot;</p>
<p>最好就需要对字段StudentAge和RegisterTime建立索引。</p>
<p>想知道CouchDB在执行一条查询语句究竟有没有使用索引，用了哪些索引，可以通过向CouchDB发送post请求的方法，通过返回的response来查看使用了哪些索引。具体可参考下面的链接<br>
<a href="https://docs.couchdb.org/en/latest/api/database/find.html#db-explain"target="_blank" rel="external nofollow noopener noreferrer">https://docs.couchdb.org/en/latest/api/database/find.html#db-explain<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a><br>
1.3.8. /db/_explain 这一节的内容</p>
<p>具体的操作可以通过postman来实现，<br>
post的地址如<a href="http://127.0.0.1:5984/member_goods/_explain"target="_blank" rel="external nofollow noopener noreferrer">http://127.0.0.1:5984/member_goods/_explain<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a><br>
发送的body就是查询select语句的内容，<br>
注意header里需要配置一个KeyValue Content-Type:application/json</p>
<h2 id="8-使用couchdb在使用select语句时尽量避免使用sort进行排序">8. 使用CouchDB，在使用select语句时尽量避免使用sort进行排序</h2>
<p>sort排序会严重消耗查询时间，容易造成查询超时，应尽量避免使用。使用sort语句，必须对sort语句中涉及的字段创建索引，否则会报错。</p>
<h2 id="9搭建fabric区块链浏览器的坑">9.搭建Fabric区块链浏览器的坑</h2>
<p>搭建Fabric区块链浏览器的时，如果之前曾经在同一台机器上使用不同的用户证书搭建过Fabric区块链浏览器，那么在同一台机器上使用新的用户证书搭建Fabric区块链浏览器时，一定要运行下面的命令清除之前的容器服务里的volume残留值：<br>
docker-compose down -v</p>
<p>详细可以参考这篇文章<br>
<a href="https://blog.csdn.net/lyz19961221/article/details/118576529"target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/lyz19961221/article/details/118576529<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></p>
<h2 id="10避免fabric的智能合约函数陷入死循环">10.避免Fabric的智能合约函数陷入死循环</h2>
<p>合约函数陷入死循环，不但会导致本次合约函数执行超时，而且后面会导致无法执行其它合约函数的问题，后果非常严重，详细可以参考这篇文章<br>
<a href="https://zhuanlan.zhihu.com/p/572782459"target="_blank" rel="external nofollow noopener noreferrer">https://zhuanlan.zhihu.com/p/572782459<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></p>]]></description>
</item>
<item>
  <title>solidity动态数组的增删改查</title>
  <link>http://blog.579878700.xyz/solidity_curd/</link>
  <pubDate>Fri, 17 Mar 2023 00:35:21 &#43;0800</pubDate>
  <author>map[avatar:/images/avatar.jpg email:&lt;nil&gt; link:&lt;nil&gt; name:waka]</author>
  <guid>http://blog.579878700.xyz/solidity_curd/</guid>
  <description><![CDATA[<h2 id="数组类型">数组类型</h2>
<p>Solidity支持两种数组: 静态数组和动态数组。</p>
<p>又分<code>storage</code>与<code>memory</code>型数组</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">uint[] memory list;
</span></span><span class="line"><span class="cl">//变长memory数组，使用前必须确定长度
</span></span><span class="line"><span class="cl">list =new uint[](a);
</span></span><span class="line"><span class="cl">//然后再使用，一般用在函数内
</span></span><span class="line"><span class="cl">memory型数组不能使用pop,push也不能修改length
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="静态数组">静态数组</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">// 固定长度为2的静态数组定义
</span></span><span class="line"><span class="cl">uint[2] fixedArray;
</span></span><span class="line"><span class="cl">//定长数组实例化
</span></span><span class="line"><span class="cl">fixedArray = [4, 6];
</span></span></code></pre></td></tr></table>
</div>
</div><p>静态数组不可新增元素，但可修改现有元素的值。</p>
<h3 id="动态数组">动态数组</h3>
<p>动态数组，长度不固定，可以动态添加元素。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">//声明
</span></span><span class="line"><span class="cl">uint[] dynamicArray;
</span></span><span class="line"><span class="cl">//初始化，这里实例化一个长度为2的数组，值为0。
</span></span><span class="line"><span class="cl">dynamicArray = new uint[](2);
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="c1">// SPDX-License-Identifier: MIT
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">pragma solidity</span> <span class="o">^</span><span class="mi">0</span><span class="p">.</span><span class="mi">8</span><span class="p">.</span><span class="mi">9</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">library</span> <span class="n">Array</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nf">push</span><span class="p">(</span><span class="kt">uint256</span><span class="p">[]</span> <span class="k">memory</span> <span class="n">_nums</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_num</span><span class="p">)</span> <span class="k">internal</span> <span class="k">pure</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">assembly</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// 在可变数组的 末尾追加 一个value (_num)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nf">mstore</span><span class="p">(</span><span class="nf">add</span><span class="p">(</span><span class="n">_nums</span><span class="p">,</span> <span class="nf">mul</span><span class="p">(</span><span class="nf">add</span><span class="p">(</span><span class="nf">mload</span><span class="p">(</span><span class="n">_nums</span><span class="p">),</span> <span class="mi">1</span><span class="p">),</span> <span class="mh">0x20</span><span class="p">)),</span> <span class="n">_num</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="c1">// 可变数组的length 加 1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nf">mstore</span><span class="p">(</span><span class="n">_nums</span><span class="p">,</span> <span class="nf">add</span><span class="p">(</span><span class="nf">mload</span><span class="p">(</span><span class="n">_nums</span><span class="p">),</span> <span class="mi">1</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="c1">// 0x40 是空闲内存指针的预定义位置 (value 为 空闲指针开始位)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nf">mstore</span><span class="p">(</span><span class="mh">0x40</span><span class="p">,</span> <span class="nf">add</span><span class="p">(</span><span class="nf">mload</span><span class="p">(</span><span class="mh">0x40</span><span class="p">),</span> <span class="mh">0x20</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nf">pop</span><span class="p">(</span><span class="kt">uint256</span><span class="p">[]</span> <span class="k">memory</span> <span class="n">_nums</span><span class="p">)</span> <span class="k">internal</span> <span class="k">pure</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">uint256</span> <span class="n">num_</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">assembly</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// 取出可变数组的最后一个value
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="n">num_</span> <span class="o">:=</span> <span class="nf">mload</span><span class="p">(</span><span class="nf">add</span><span class="p">(</span><span class="n">_nums</span><span class="p">,</span> <span class="nf">mul</span><span class="p">(</span><span class="nf">mload</span><span class="p">(</span><span class="n">_nums</span><span class="p">),</span> <span class="mh">0x20</span><span class="p">)))</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// length - 1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nf">mstore</span><span class="p">(</span><span class="n">_nums</span><span class="p">,</span> <span class="nf">sub</span><span class="p">(</span><span class="nf">mload</span><span class="p">(</span><span class="n">_nums</span><span class="p">),</span> <span class="mi">1</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nf">del</span><span class="p">(</span><span class="kt">uint256</span><span class="p">[]</span> <span class="k">memory</span> <span class="n">_nums</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_index</span><span class="p">)</span> <span class="k">internal</span> <span class="k">pure</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">assembly</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// 下标位置需 小于 数组.length
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="n">if</span> <span class="nf">lt</span><span class="p">(</span><span class="n">_index</span><span class="p">,</span> <span class="nf">mload</span><span class="p">(</span><span class="n">_nums</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="c1">// 将最后一个value 移到 _index 下标处 
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                <span class="nf">mstore</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                    <span class="nf">add</span><span class="p">(</span><span class="n">_nums</span><span class="p">,</span> <span class="nf">mul</span><span class="p">(</span><span class="nf">add</span><span class="p">(</span><span class="n">_index</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="mh">0x20</span><span class="p">)),</span>
</span></span><span class="line"><span class="cl">                    <span class="nf">mload</span><span class="p">(</span><span class="nf">add</span><span class="p">(</span><span class="n">_nums</span><span class="p">,</span> <span class="nf">mul</span><span class="p">(</span><span class="nf">mload</span><span class="p">(</span><span class="n">_nums</span><span class="p">),</span> <span class="mh">0x20</span><span class="p">)))</span>
</span></span><span class="line"><span class="cl">                <span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="c1">// length - 1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                <span class="nf">mstore</span><span class="p">(</span><span class="n">_nums</span><span class="p">,</span> <span class="nf">sub</span><span class="p">(</span><span class="nf">mload</span><span class="p">(</span><span class="n">_nums</span><span class="p">),</span> <span class="mi">1</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nf">update</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="kt">uint256</span><span class="p">[]</span> <span class="k">memory</span> <span class="n">_nums</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="kt">uint256</span> <span class="n">_index</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="kt">uint256</span> <span class="n">_num</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span> <span class="k">internal</span> <span class="k">pure</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">_nums</span><span class="p">[</span><span class="n">_index</span><span class="p">]</span> <span class="o">=</span> <span class="n">_num</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nf">get</span><span class="p">(</span><span class="kt">uint256</span><span class="p">[]</span> <span class="k">memory</span> <span class="n">_nums</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_index</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">internal</span>
</span></span><span class="line"><span class="cl">        <span class="k">pure</span>
</span></span><span class="line"><span class="cl">        <span class="k">returns</span> <span class="p">(</span><span class="kt">uint256</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">_nums</span><span class="p">[</span><span class="n">_index</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">contract</span> <span class="nc">testArr</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kn">using</span> <span class="n">Array</span> <span class="k">for</span> <span class="kt">uint256</span><span class="p">[];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nf">push</span><span class="p">(</span><span class="kt">uint256</span><span class="p">[]</span> <span class="k">memory</span> <span class="n">_nums</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">num</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">external</span>
</span></span><span class="line"><span class="cl">        <span class="k">pure</span>
</span></span><span class="line"><span class="cl">        <span class="k">returns</span> <span class="p">(</span><span class="kt">uint256</span><span class="p">[]</span> <span class="k">memory</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">_nums</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">num</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">_nums</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nf">pop</span><span class="p">(</span><span class="kt">uint256</span><span class="p">[]</span> <span class="k">memory</span> <span class="n">_nums</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">external</span>
</span></span><span class="line"><span class="cl">        <span class="k">pure</span>
</span></span><span class="line"><span class="cl">        <span class="k">returns</span> <span class="p">(</span><span class="kt">uint256</span><span class="p">[]</span> <span class="k">memory</span><span class="p">,</span> <span class="kt">uint256</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kt">uint256</span> <span class="n">num_</span> <span class="o">=</span> <span class="n">_nums</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">(</span><span class="n">_nums</span><span class="p">,</span> <span class="n">num_</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nf">del</span><span class="p">(</span><span class="kt">uint256</span><span class="p">[]</span> <span class="k">memory</span> <span class="n">_nums</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_index</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">external</span>
</span></span><span class="line"><span class="cl">        <span class="k">pure</span>
</span></span><span class="line"><span class="cl">        <span class="k">returns</span> <span class="p">(</span><span class="kt">uint256</span><span class="p">[]</span> <span class="k">memory</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">_nums</span><span class="p">.</span><span class="n">del</span><span class="p">(</span><span class="n">_index</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">_nums</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nf">update</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="kt">uint256</span><span class="p">[]</span> <span class="k">memory</span> <span class="n">_nums</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="kt">uint256</span> <span class="n">_index</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="kt">uint256</span> <span class="n">_num</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span> <span class="k">external</span> <span class="k">pure</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">uint256</span><span class="p">[]</span> <span class="k">memory</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">_nums</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="n">_index</span><span class="p">,</span> <span class="n">_num</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">_nums</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nf">get</span><span class="p">(</span><span class="kt">uint256</span><span class="p">[]</span> <span class="k">memory</span> <span class="n">_nums</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_index</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">external</span>
</span></span><span class="line"><span class="cl">        <span class="k">pure</span>
</span></span><span class="line"><span class="cl">        <span class="k">returns</span> <span class="p">(</span><span class="kt">uint256</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">_nums</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">_index</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>OrderBook的实现思路</title>
  <link>http://blog.579878700.xyz/orderbook/</link>
  <pubDate>Wed, 15 Mar 2023 23:36:31 &#43;0800</pubDate>
  <author>map[avatar:/images/avatar.jpg email:&lt;nil&gt; link:&lt;nil&gt; name:waka]</author>
  <guid>http://blog.579878700.xyz/orderbook/</guid>
  <description><![CDATA[<h2 id="什么是orderbook">什么是OrderBook</h2>
<p><strong>OrderBook是一个包含了所有交易者信息的订单集合</strong>，他们想买或者想卖。<strong>想买的order叫做bid，想卖的order叫做ask</strong>，这些bid和ask的order一旦满足了各自的条件，就会尽可能快的完成配对，促成一笔交易。这里有两个种类的order需要介绍一下，它们也是最为基本的交易订单。<strong>第一种是市价 market order，买和卖都是依据当前在orderbook能寻找到的最优价格执行</strong>。<strong>第二种是限价 limit order，买和卖都是按照已经确定量和价格进行</strong>。OrderBook是传统金融中一个很重要的交易方式，通过OrderBook中显示的信息，可以判断当前市场的供需关系以及价格关系，基于以上的判断可以对市场中的下一步发生的变化进行一个判断。<strong>在去中心化金融(Defi)，刚开始发展时也借鉴到了OrderBook的模式</strong>，由于传统的OrderBook由中心化机构进行给出，导致了信息中心化不透明。所以在Defi中想实现一个OrderBook完全只有买方和卖方进行参与，而机构只收取相依的手续费即可。<br>
看起来这样的想法是一种很不错的想法，提供了一个更加公平和自由度更高的一个市场让人们去操作。但是在实际中进行时会发现问题：</p>
<ul>
<li><strong>对于OrderBook需求来说整个区块链网络中交易成交的速率和数量都无法满足</strong>，即使以太坊的速率相较于比特币网络有了很大的提高。</li>
<li>在交易中有gas的存在，<strong>如果没有一种很好的方法去定位到合适的订单的话，随着订单数量的变多，找到相应订单所需的gas会消耗很大</strong>。并且每笔交易都有一个gas上限，当gas达到相应上限的时候就会导致交易失败。</li>
</ul>
<h2 id="实现orderbook思路">实现OrderBook思路</h2>
<h2 id="一般的思路">一般的思路</h2>
<p>抛开以太坊特殊的条件，我们在实现OrderBook的时候，采用的最常用的方法就是蛮力法。思路：</p>
<ul>
<li>创建买单和买单两个数组</li>
<li>当有买单创建的时候，对买单数组进行遍历，找到对应价格对应数量的订单，完成一笔交易。如果没找到，将买单加入买单数组。同理创建卖单时也进行相应的操作。</li>
</ul>
<p>这个方法能确保找到所需要的的交易，但是<strong>整个过程的时间复杂度为O(n)</strong>,然后可以进行并发和互斥锁结合，可以在短时间内处理大量的买单和买单满足需求。但是随着订单量的增多，所需要的时间也会增多，这在链上和链下的环境中都是不能接受的。<br>
但是，如果不采用蛮力法的话，将<strong>买单和卖单分别用排序二叉树的方式进行数据保存，那样的话时间复杂度就会变为O(logn)</strong>，这样可以优化查找，只是在插入是有点麻烦。</p>
<h2 id="换种思路">换种思路</h2>
<p>在智能合约中我们要尽量避免时使用循环的方式，这是很费gas的。而为了确保能够得到想要的价格。我们可以这样设计：</p>
<ul>
<li>创建两个买单和卖单的两个映射
<ul>
<li><code>mapping(uint =&gt; mapping(uint =&gt; address[])) Bid;</code></li>
<li><code>mapping(uint =&gt; mapping(uint =&gt; address[])) Ask;</code></li>
<li><strong>前一个uint是价格，第二个uint是数量，最后面的是卖方或买方的地址</strong>；</li>
</ul>
</li>
<li>每次有买单和卖单进来的时候，在mapping中进行搜索，完成交易。搜索不到的话加入对应的mapping中即可。</li>
</ul>
<p>看上去这样的两个映射可以解决买卖双方的订单的查找的时间复杂度问题（<strong>将时间复杂度降为O(1)</strong>）。但是这样却忽略了一个问题，这样做我们无法看到整个市场的变化和趋势。我们这样设计代码的话只是实现了OrderBook的一部分功能。如果想要实现OrderBook，还有很多要进行修改的地方。</p>
<h2 id="第三种思路">第三种思路</h2>
<p>在链上尽量不要使用大循环，但是我们可以将大循环变为小的循环，这样来说是可以的。同时我们也要反映整个OrderBook的变化，我们就可以设计一个压缩前缀树：</p>
<ul>
<li><strong>树中的每个节点为数字0~9，这样从头结点到叶子节点前的节点就可以连成一串数字，这个数字表示金额</strong>，每个叶子节点储存的是订单数组，每个订单保存了在此金额下的数量和地址。</li>
<li>同样树也要分两颗树，买家树和卖家树。</li>
<li><strong>每次有新金额出现时，要对树进行修改</strong>，对树进行扩展，保证从头到尾连成的数字为金额。</li>
<li><strong>同时当金额对应的叶子节点中数组长度为0时，要对树进行删除</strong>，这样做的目的是保证在对树遍历时减少时间消耗。</li>
<li><strong>在新买单创建时，先在卖家树中找到对应金额的数组，在对数组进行遍历找到对应金额(此时就将大循环优化为一个小循环)</strong>，找到对应订单后就成交交易。没找到的话就将其加入买家树。(同理，卖单也是这样处理)</li>
</ul>
<p>这样的话就可以兼顾市场变化和挂单的需求。</p>
<h2 id="问题">问题</h2>
<p>以上的思路都可以实现OrderBook，但是还有许多问题需要进行考虑：</p>
<ul>
<li>如果对应的数量找不到，但是存在两个或两个以上的订单之和满足要求的时候，要怎么进行处理？<strong>在时间复杂度较小的前提下如何完成这个拆分寻找的过程？</strong></li>
<li><strong>整个树的结构要如何设计？才能使得在增删改查较为方便？</strong></li>
</ul>
<h2 id="结尾">结尾</h2>
<p>虽然现在主流的DEX没有使用OrderBook，而是使用LP这样的方式，但是LP也会存在着很多的问题需要解决。正是因为OrderBook的一些功能无法满足Defi的需求，所以才会有LP的出现。技术的适用性是需要结合需求的。或许在以后可能会产生适应区块链的OrderBook。</p>]]></description>
</item>
<item>
  <title>使用springboot整合OpenAI的Chatgpt api和Whisper api</title>
  <link>http://blog.579878700.xyz/springboot-openai/</link>
  <pubDate>Mon, 13 Mar 2023 22:41:46 &#43;0800</pubDate>
  <author>map[avatar:/images/avatar.jpg email:&lt;nil&gt; link:&lt;nil&gt; name:waka]</author>
  <guid>http://blog.579878700.xyz/springboot-openai/</guid>
  <description><![CDATA[<h1 id="springbootchatgptwhisper-api">Springboot+Chatgpt+Whisper api</h1>
<p></p>
<p>本文通过springboot将两个OpenAI API的其中两个，ChatGPT和Whisper API集成在一起，方便后续的开发。</p>
<h2 id="openai-api">OpenAI API</h2>
<p>OpenAI是人工智能和机器学习工具及API的领先提供商之一。它训练了尖端的语言模型，擅长理解和生成文本。OpenAI API提供对这些模型的访问，并可用于解决几乎涉及处理语言的任何任务。它可以执行包括但不限于以下任务：</p>
<ul>
<li>
<p>Content generation 内容生成</p>
</li>
<li>
<p>Summarization 总结</p>
</li>
<li>
<p>Classification, categorization, and sentiment analysis<br>
分类、归类和情感分析</p>
</li>
<li>
<p>Data extraction 数据提取</p>
</li>
<li>
<p>Translation 翻译</p>
</li>
<li>
<p>Transcription 转录</p>
</li>
<li>
<p>Image generation 图像生成</p>
</li>
</ul>
<p>我们可以通过任何语言发出HTTP请求与API进行交互。在本篇文章中，我们将使用Java构建一个Spring Boot微服务来集成Chatgpt API和Whisper API语音转文字功能。</p>
<h2 id="集成chatgpt-whisper-spring-boot">集成chatgpt-whisper-spring-boot</h2>
<ol>
<li>
<p>首先我们打开IDEA新建一个springboot项目</p>
<p></p>
</li>
<li>
<p>然后往其中的pom.xml文件添加依赖</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="o">&lt;</span><span class="n">dependency</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="o">&lt;</span><span class="n">groupId</span><span class="o">&gt;</span><span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">boot</span><span class="o">&lt;/</span><span class="n">groupId</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="o">&lt;</span><span class="n">artifactId</span><span class="o">&gt;</span><span class="n">spring</span><span class="o">-</span><span class="n">boot</span><span class="o">-</span><span class="n">starter</span><span class="o">-</span><span class="n">web</span><span class="o">&lt;/</span><span class="n">artifactId</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="o">&lt;/</span><span class="n">dependency</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="o">&lt;</span><span class="n">dependency</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="o">&lt;</span><span class="n">groupId</span><span class="o">&gt;</span><span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">cloud</span><span class="o">&lt;/</span><span class="n">groupId</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="o">&lt;</span><span class="n">artifactId</span><span class="o">&gt;</span><span class="n">spring</span><span class="o">-</span><span class="n">cloud</span><span class="o">-</span><span class="n">starter</span><span class="o">-</span><span class="n">openfeign</span><span class="o">&lt;/</span><span class="n">artifactId</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="o">&lt;</span><span class="n">version</span><span class="o">&gt;</span><span class="mf">4.0.1</span><span class="o">&lt;/</span><span class="n">version</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="o">&lt;/</span><span class="n">dependency</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="o">&lt;</span><span class="n">dependency</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="o">&lt;</span><span class="n">groupId</span><span class="o">&gt;</span><span class="n">org</span><span class="o">.</span><span class="na">projectlombok</span><span class="o">&lt;/</span><span class="n">groupId</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="o">&lt;</span><span class="n">artifactId</span><span class="o">&gt;</span><span class="n">lombok</span><span class="o">&lt;/</span><span class="n">artifactId</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="o">&lt;</span><span class="n">optional</span><span class="o">&gt;</span><span class="kc">true</span><span class="o">&lt;/</span><span class="n">optional</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="o">&lt;/</span><span class="n">dependency</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="o">&lt;</span><span class="n">dependency</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="o">&lt;</span><span class="n">groupId</span><span class="o">&gt;</span><span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">boot</span><span class="o">&lt;/</span><span class="n">groupId</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="o">&lt;</span><span class="n">artifactId</span><span class="o">&gt;</span><span class="n">spring</span><span class="o">-</span><span class="n">boot</span><span class="o">-</span><span class="n">configuration</span><span class="o">-</span><span class="n">processor</span><span class="o">&lt;/</span><span class="n">artifactId</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="o">&lt;</span><span class="n">optional</span><span class="o">&gt;</span><span class="kc">true</span><span class="o">&lt;/</span><span class="n">optional</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="o">&lt;/</span><span class="n">dependency</span><span class="o">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ol>
<h2 id="spring-cloud-openfeign">Spring Cloud OpenFeign</h2>
<p>对于第三方REST API集成，有许多可以用的工具，这里我们选择Spring Cloud OpenFeign，因为这个对于Spring Boot 3支持方面比较好。</p>
<p>接下来我们打开 <code>application.yml</code>，往其中添加下面的内容：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">openai</span><span class="o">-</span><span class="n">service</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">  <span class="n">api</span><span class="o">-</span><span class="n">key</span><span class="o">:</span> <span class="n">xxxxxxxxxx</span>
</span></span><span class="line"><span class="cl">  <span class="n">gpt</span><span class="o">-</span><span class="n">model</span><span class="o">:</span> <span class="n">gpt</span><span class="o">-</span><span class="mf">3.5</span><span class="o">-</span><span class="n">turbo</span>
</span></span><span class="line"><span class="cl">  <span class="n">audio</span><span class="o">-</span><span class="n">model</span><span class="o">:</span> <span class="n">whisper</span><span class="o">-</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">  <span class="n">http</span><span class="o">-</span><span class="n">client</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">read</span><span class="o">-</span><span class="n">timeout</span><span class="o">:</span> <span class="mi">60000</span>
</span></span><span class="line"><span class="cl">    <span class="n">connect</span><span class="o">-</span><span class="n">timeout</span><span class="o">:</span> <span class="mi">60000</span>
</span></span><span class="line"><span class="cl">  <span class="n">urls</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">base</span><span class="o">-</span><span class="n">url</span><span class="o">:</span> <span class="n">https</span><span class="o">:</span><span class="c1">//chat.579878700.xyz/v1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">chat</span><span class="o">-</span><span class="n">url</span><span class="o">:</span> <span class="o">/</span><span class="n">chat</span><span class="o">/</span><span class="n">completions</span>
</span></span><span class="line"><span class="cl">    <span class="n">create</span><span class="o">-</span><span class="n">transcription</span><span class="o">-</span><span class="n">url</span><span class="o">:</span> <span class="o">/</span><span class="n">audio</span><span class="o">/</span><span class="n">transcriptions</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>其中 <code> api-key</code>请填写自己的api key，如果您还没有API密钥，请到<a href="https://platform.openai.com/account/api-keys"target="_blank" rel="external nofollow noopener noreferrer">https://platform.openai.com/account/api-keys<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a> 以生成API密钥。实际开发中这种配置肯定要放在配置中心里面，但是我们今天先简单的写个demo。</p>
<p><code>gpt-model</code> ： <code>gpt-3.5-turbo</code> ，功能最强大的GPT-3.5模型，针对聊天进行了优化，成本仅为 <code>text-davinci-003</code> 的1/10，它可以执行任何语言任务，质量更好，输出更长，指令一致。</p>
<p><code>audio-model</code> ： <code>whisper-1</code> ，通用语音识别模型。它是在一个大型的多样化音频数据集上进行训练的，也是一个多任务模型，可以执行多语言语音识别以及语音翻译和来自世界各地大约100种不同语言的音频文件的语言识别。</p>
<p><code> read-time</code>和<code> connect-time</code>可以根据实际需求更改，这里我使用中文来回答，因此我设置的大一些，避免回答返回时间太长导致超时问题。</p>
<p><code> base-url</code>这里我填写的是我使用CF进行反代的地址，因为一些原因，openai api在中国不能直接访问，所以使用这个方法。如果不需要，请改成<code> https://api.openai.com/v1</code></p>
<p><code>urls</code> ：根据OpenAI API文档，所有API URL均以 <code>[https://api.openai.com/v1](https://api.openai.com/v1)</code> 开头。我们将其定义为 <code>base-url</code> 。对于聊天功能， <code>chat-url</code> 被定义为 <code>/chat/completions</code> 。对于音频转录， <code>create-transcription-url</code> 被定义为 <code>/audio/transcriptions</code> 。</p>
<p>我们使用 <code>/chat/completions</code> 继续使用 <code>gpt-3.5-turbo</code> 模型。</p>
<h2 id="feign-client">Feign Client</h2>
<p>现在配置已经完成，让我们继续编写声明式Feign客户端，我们需要两个方法： <code>chat</code> 和 <code>createTranscription</code> ，调用它们各自的OpenAI API端点URL。你可以随意命名这些方法，为了简单起见，让我们继续使用 <code>chat</code> 和 <code>createTranscription</code> 。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nd">@FeignClient</span><span class="o">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">name</span> <span class="o">=</span> <span class="s">&#34;openai-service&#34;</span><span class="o">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">url</span> <span class="o">=</span> <span class="s">&#34;${openai-service.urls.base-url}&#34;</span><span class="o">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">configuration</span> <span class="o">=</span> <span class="n">OpenAIClientConfig</span><span class="o">.</span><span class="na">class</span>
</span></span><span class="line"><span class="cl"><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">OpenAIClient</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nd">@PostMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">&#34;${openai-service.urls.chat-url}&#34;</span><span class="o">,</span> <span class="n">headers</span> <span class="o">=</span> <span class="o">{</span><span class="s">&#34;Content-Type=application/json&#34;</span><span class="o">})</span>
</span></span><span class="line"><span class="cl">    <span class="n">ChatGPTResponse</span> <span class="nf">chat</span><span class="o">(</span><span class="nd">@RequestBody</span> <span class="n">ChatGPTRequest</span> <span class="n">chatGPTRequest</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nd">@PostMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">&#34;${openai-service.urls.create-transcription-url}&#34;</span><span class="o">,</span> <span class="n">headers</span> <span class="o">=</span> <span class="o">{</span><span class="s">&#34;Content-Type=multipart/form-data&#34;</span><span class="o">})</span>
</span></span><span class="line"><span class="cl">    <span class="n">WhisperTranscriptionResponse</span> <span class="nf">createTranscription</span><span class="o">(</span><span class="nd">@ModelAttribute</span> <span class="n">WhisperTranscriptionRequest</span> <span class="n">whisperTranscriptionRequest</span><span class="o">);</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="models">Models</h2>
<p>通过严格遵循API文档，我们先定义请求/响应类。请参见下面使用 <code>gpt-3.5-turbo</code> 模型的示例请求和响应类。注意，使用 <code>text-davinci-003</code> 完成的请求/响应略有不同，有关详细信息，请参阅API文档。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nd">@Data</span>
</span></span><span class="line"><span class="cl"><span class="nd">@Builder</span>
</span></span><span class="line"><span class="cl"><span class="nd">@AllArgsConstructor</span>
</span></span><span class="line"><span class="cl"><span class="nd">@NoArgsConstructor</span>
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ChatGPTRequest</span> <span class="kd">implements</span> <span class="n">Serializable</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="n">String</span> <span class="n">model</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Message</span><span class="o">&gt;</span> <span class="n">messages</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nd">@Data</span>
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ChatGPTResponse</span> <span class="kd">implements</span> <span class="n">Serializable</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="n">String</span> <span class="n">id</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="n">String</span> <span class="n">object</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="n">String</span> <span class="n">model</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="n">LocalDate</span> <span class="n">created</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Choice</span><span class="o">&gt;</span> <span class="n">choices</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="n">Usage</span> <span class="n">usage</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>使用 Whisper 模型的音频转录请求/响应示例：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nd">@Data</span>
</span></span><span class="line"><span class="cl"><span class="nd">@Builder</span>
</span></span><span class="line"><span class="cl"><span class="nd">@AllArgsConstructor</span>
</span></span><span class="line"><span class="cl"><span class="nd">@NoArgsConstructor</span>
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TranscriptionRequest</span> <span class="kd">implements</span> <span class="n">Serializable</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="n">MultipartFile</span> <span class="n">file</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nd">@Data</span>
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">WhisperTranscriptionResponse</span> <span class="kd">implements</span> <span class="n">Serializable</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="n">String</span> <span class="n">text</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="service">Service</h2>
<p>下面是服务层类 <code>OpenAIClientService</code> ，构造模型并调用Feignclient以触发对OpenAI API的调用。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nd">@Service</span>
</span></span><span class="line"><span class="cl"><span class="nd">@RequiredArgsConstructor</span>
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">OpenAIClientService</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="kd">final</span> <span class="n">OpenAIClient</span> <span class="n">openAIClient</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="kd">final</span> <span class="n">OpenAIClientConfig</span> <span class="n">openAIClientConfig</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="kd">final</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">ROLE_USER</span> <span class="o">=</span> <span class="s">&#34;user&#34;</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="n">ChatGPTResponse</span> <span class="nf">chat</span><span class="o">(</span><span class="n">ChatRequest</span> <span class="n">chatRequest</span><span class="o">){</span>
</span></span><span class="line"><span class="cl">        <span class="n">Message</span> <span class="n">message</span> <span class="o">=</span> <span class="n">Message</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">                <span class="o">.</span><span class="na">role</span><span class="o">(</span><span class="n">ROLE_USER</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">                <span class="o">.</span><span class="na">content</span><span class="o">(</span><span class="n">chatRequest</span><span class="o">.</span><span class="na">getQuestion</span><span class="o">())</span>
</span></span><span class="line"><span class="cl">                <span class="o">.</span><span class="na">build</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">ChatGPTRequest</span> <span class="n">chatGPTRequest</span> <span class="o">=</span> <span class="n">ChatGPTRequest</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">                <span class="o">.</span><span class="na">model</span><span class="o">(</span><span class="n">openAIClientConfig</span><span class="o">.</span><span class="na">getModel</span><span class="o">())</span>
</span></span><span class="line"><span class="cl">                <span class="o">.</span><span class="na">messages</span><span class="o">(</span><span class="n">Collections</span><span class="o">.</span><span class="na">singletonList</span><span class="o">(</span><span class="n">message</span><span class="o">))</span>
</span></span><span class="line"><span class="cl">                <span class="o">.</span><span class="na">build</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">openAIClient</span><span class="o">.</span><span class="na">chat</span><span class="o">(</span><span class="n">chatGPTRequest</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="n">WhisperTranscriptionResponse</span> <span class="nf">createTranscription</span><span class="o">(</span><span class="n">TranscriptionRequest</span> <span class="n">transcriptionRequest</span><span class="o">){</span>
</span></span><span class="line"><span class="cl">        <span class="n">WhisperTranscriptionRequest</span> <span class="n">whisperTranscriptionRequest</span> <span class="o">=</span> <span class="n">WhisperTranscriptionRequest</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">                <span class="o">.</span><span class="na">model</span><span class="o">(</span><span class="n">openAIClientConfig</span><span class="o">.</span><span class="na">getAudioModel</span><span class="o">())</span>
</span></span><span class="line"><span class="cl">                <span class="o">.</span><span class="na">file</span><span class="o">(</span><span class="n">transcriptionRequest</span><span class="o">.</span><span class="na">getFile</span><span class="o">())</span>
</span></span><span class="line"><span class="cl">                <span class="o">.</span><span class="na">build</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">openAIClient</span><span class="o">.</span><span class="na">createTranscription</span><span class="o">(</span><span class="n">whisperTranscriptionRequest</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>请注意，除了必需参数之外，我们还可以在请求正文中传递多个可选参数来指示 OpenAI API。例如，对于<code>/chat/completions</code>，我们可以传入<code>temperature</code>参数，它告诉 OpenAI API 使用什么采样温度，介于 0 和 2 之间。较高的值将使输出更具随机性和风险性，而较低的值会使它更集中和确定性。<code>temperature</code>如果我们不指定，默认值为 1。请参阅<a href="https://platform.openai.com/docs/api-reference"target="_blank" rel="external nofollow noopener noreferrer">OpenAI API 文档，<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>了解我们可以在请求正文中传递的所有可能的参数。</p>
<h2 id="rest-controller-rest">REST Controller REST</h2>
<p>最后，让我们看看REST Controller层的 <code>OpenAIClientController</code> ，里面的两个客户端：</p>
<ul>
<li>
<p><code>chat</code> （ <code>/api/v1/chat</code> ）：POST调用，使用JSON格式的消息，接受一个问题，并输出响应内容。</p>
</li>
<li>
<p><code>createTranscription</code> （ <code>/api/v1/transcription</code> ）：POST调用，使用multipart/form-data，因为我们要上传音频文件，如 <code>m4a</code>和<code> mp3</code>等音频文件 ，API将把音频文件转录为文本。</p>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nd">@RestController</span>
</span></span><span class="line"><span class="cl"><span class="nd">@RequiredArgsConstructor</span>
</span></span><span class="line"><span class="cl"><span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">&#34;/api/v1&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">OpenAIClientController</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="kd">final</span> <span class="n">OpenAIClientService</span> <span class="n">openAIClientService</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nd">@PostMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">&#34;/chat&#34;</span><span class="o">,</span> <span class="n">consumes</span> <span class="o">=</span> <span class="n">MediaType</span><span class="o">.</span><span class="na">APPLICATION_JSON_VALUE</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="n">ChatGPTResponse</span> <span class="nf">chat</span><span class="o">(</span><span class="nd">@RequestBody</span> <span class="n">ChatRequest</span> <span class="n">chatRequest</span><span class="o">){</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">openAIClientService</span><span class="o">.</span><span class="na">chat</span><span class="o">(</span><span class="n">chatRequest</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nd">@PostMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">&#34;/transcription&#34;</span><span class="o">,</span> <span class="n">consumes</span> <span class="o">=</span> <span class="n">MediaType</span><span class="o">.</span><span class="na">MULTIPART_FORM_DATA_VALUE</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="n">WhisperTranscriptionResponse</span> <span class="nf">createTranscription</span><span class="o">(</span><span class="nd">@ModelAttribute</span> <span class="n">TranscriptionRequest</span> <span class="n">transcriptionRequest</span><span class="o">){</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">openAIClientService</span><span class="o">.</span><span class="na">createTranscription</span><span class="o">(</span><span class="n">transcriptionRequest</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="authentication-认证">Authentication 认证</h2>
<p>OpenAI API调用需要传入一个带有API密钥的请求头“ <code>Authorization</code> “。让我们声明一个 <code>RequestInterceptor </code>bean来处理它，参见 <code>OpenAIClientConfig </code>类的示例代码片段：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nd">@Bean</span>
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="n">RequestInterceptor</span> <span class="nf">apiKeyInterceptor</span><span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">request</span> <span class="o">-&gt;</span> <span class="n">request</span><span class="o">.</span><span class="na">header</span><span class="o">(</span><span class="s">&#34;Authorization&#34;</span><span class="o">,</span> <span class="s">&#34;Bearer &#34;</span> <span class="o">+</span> <span class="n">apiKey</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="最后运行项目">最后运行项目</h2>
<p>用Postman测试一下</p>
<p>下面是 <code>/chat</code> 客户端的示例请求/响应截图：</p>
<p></p>
<p>下面是 <code>/transcription</code> 的请求/响应：</p>
<p></p>
<p>感觉对中文的识别准确度还是可以的。</p>
<p>使用Whisper模型的音频转录或翻译，文件上传目前限制为25 MB，并支持以下输入文件类型：<code>mp3</code>, <code>mp4</code>, <code>mpeg</code>, <code>mpga</code>, <code>m4a</code>, <code>wav</code>, <code>webm</code></p>
<p>Whisper型号的定价目前设定为0.006美元/分钟。</p>
<h2 id="使用whisper-api进行音频翻译">使用Whisper API进行音频翻译</h2>
<p>除了音频转录，Whisper API还提供音频翻译端点 <code>/audio/translations</code> 。我也测试了这个特性。然而，我发现，尽管它说可以把音频翻译成英语，但我录了一个中文短语，并在应用程序中调用了 <code>/audio/translations</code> api，结果发现回应仍然是中文。我也用日语测试了这个api，它完整的翻译成了英语。这应该是一个bug。</p>
<h2 id="总结">总结</h2>
<p>与任何第三方REST API一样，将OpenAI API集成到Springboot中非常简单。</p>
<p>因此使用api开发自己的人工智能程序会变的非常便捷。</p>]]></description>
</item>
<item>
  <title>《Self-Sovereign Identity》(《身份自主权》中英文书籍)</title>
  <link>http://blog.579878700.xyz/ssi_book/</link>
  <pubDate>Sun, 05 Mar 2023 23:27:33 &#43;0800</pubDate>
  <author>map[avatar:/images/avatar.jpg email:&lt;nil&gt; link:&lt;nil&gt; name:waka]</author>
  <guid>http://blog.579878700.xyz/ssi_book/</guid>
  <description><![CDATA[<h2 id="百度网盘下载地址">百度网盘下载地址</h2>
<blockquote>
<p>链接：<a href="https://pan.baidu.com/s/1ZkE_goWKyTMtZPdyZXRp7A?pwd=b0m1"target="_blank" rel="external nofollow noopener noreferrer">https://pan.baidu.com/s/1ZkE_goWKyTMtZPdyZXRp7A?pwd=b0m1<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>
提取码：<strong>b0m1</strong></p>
</blockquote>
<p>因为网上没有找到中文书籍，使用了deepl机翻，翻译的排版不是很好，但是基本能看懂。</p>
<h2 id="内容简介">内容简介</h2>
<p>​	Self-Sovereign Identity gives you a radical new perspective on how we represent ourselves in the world. This case study-driven book cuts through the jargon and hype to expose the amazing potential SSI offers for for security, privacy, identity, and even uprooting way the global economy works. SSI experts Drummond Reed and Alex Preukschat present a vision of the future, examining how SSI protocols will impact industries from banking through to government. You’ll get a clear mental model for how SSI works as you tour SSI-enabled eCommerce and eHealth applications and their advantages over current technologies. While you learn the philosophical and sociological concepts that underpin SSI, you’ll reach the book’s lightbulb moment: what this radical technology really means for the shape of our lives, our businesses, and our futures.</p>
<p>what&rsquo;s inside<br>
How SSI will affect your industry<br>
The essential technical and legal concepts of SSI<br>
The architecture of SSI software<br>
Emerging standards for SSI</p>
<p>​	自我主权身份 &ldquo;为您提供了一个关于我们如何在世界中代表自己的全新视角。这本以案例研究为导向的书突破了专业术语和炒作，揭示了SSI为安全、隐私、身份，甚至为全球经济运作方式提供的惊人潜力。SSI专家Drummond Reed和Alex Preukschat提出了未来的愿景，研究了SSI协议将如何影响从银行到政府的各个行业。当你参观SSI支持的电子商务和电子医疗应用以及它们相对于当前技术的优势时，你会对SSI如何工作有一个清晰的心理模型。在你学习支撑SSI的哲学和社会学概念的同时，你将迎来本书的闪光时刻：这项激进的技术对我们的生活、商业和未来的形态意味着什么。</p>
<p>书中内容<br>
SSI将如何影响你的行业<br>
SSI的基本技术和法律概念<br>
SSI软件的架构<br>
新兴的SSI标准</p>
<p></p>]]></description>
</item>
<item>
  <title>默克尔树(Merkle tree)的Go实现</title>
  <link>http://blog.579878700.xyz/merkle_tree_go/</link>
  <pubDate>Sun, 05 Mar 2023 14:09:53 &#43;0800</pubDate>
  <author>map[avatar:/images/avatar.jpg email:&lt;nil&gt; link:&lt;nil&gt; name:waka]</author>
  <guid>http://blog.579878700.xyz/merkle_tree_go/</guid>
  <description><![CDATA[<h3 id="merkle-trees">Merkle trees</h3>
<hr>
<p>Merkle树是区块链技术的基本组成部分。它是由不同数据块的散列组成的数学数据结构，用作块中所有交易的摘要。</p>
<p>它还允许对大量数据中的内容进行有效和安全的验证。此结构有助于验证数据的一致性和内容。比特币和以太坊都使用Merkle树结构。Merkle树也被称为哈希树。</p>
<p>从根本上说，Merkle树是数据结构树，其中每个叶节点都用数据块的哈希标记，非叶节点用加密标记 其子节点标签的哈希值。叶节点是树中的最低节点。</p>
<p></p>
<h3 id="原理">原理</h3>
<p>区块链中每个区块都会有一个 Merkle 树，它从叶子节点（树的底部）开始，一个叶子节点就是一个交易哈希。叶子节点的数量必须是双数，但是并非每个块都包含了双数的交易。如果一个块里面的交易数为单数，那么就将最后一个叶子节点（也就是 Merkle 树的最后一个交易，不是区块的最后一笔交易）复制一份凑成双数。</p>
<p>从下往上，两两成对，连接两个节点哈希，将组合哈希作为新的哈希。新的哈希就成为新的树节点。重复该过程，直到仅有一个节点，也就是树根。根哈希然后就会当作是整个块交易的唯一标示，将它保存到区块头，然后用于工作量证明。</p>
<hr>
<h3 id="代码实现">代码实现</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-golang" data-lang="golang"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nx">main</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;bufio&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;crypto/sha256&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;fmt&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;os&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;strconv&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//默克尔树节点结构体
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">type</span> <span class="nx">Node</span> <span class="kd">struct</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">Index</span>    <span class="kt">int</span>
</span></span><span class="line"><span class="cl">	<span class="nx">Value</span>    <span class="kt">string</span>
</span></span><span class="line"><span class="cl">	<span class="nx">RootTree</span> <span class="o">*</span><span class="nx">MHTree</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//默克尔树结构体
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">type</span> <span class="nx">MHTree</span> <span class="kd">struct</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">Length</span>   <span class="kt">int</span>
</span></span><span class="line"><span class="cl">	<span class="nx">Nodes</span>    <span class="p">[]</span><span class="nx">Node</span>
</span></span><span class="line"><span class="cl">	<span class="nx">rootHash</span> <span class="kt">string</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//获得默克尔树根节点哈希值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">func</span> <span class="p">(</span><span class="nx">t</span> <span class="o">*</span><span class="nx">MHTree</span><span class="p">)</span> <span class="nf">GetRootHash</span><span class="p">()</span> <span class="kt">string</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//不管是否存储，都重新计算哈希值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">t</span><span class="p">.</span><span class="nx">rootHash</span> <span class="p">=</span>   <span class="nx">t</span><span class="p">.</span><span class="nx">Nodes</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nf">getNodeHash</span><span class="p">()</span>                            
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">rootHash</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//计算默克尔树中某个节点的哈希值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">func</span> <span class="p">(</span><span class="nx">n</span> <span class="o">*</span><span class="nx">Node</span><span class="p">)</span> <span class="nf">getNodeHash</span><span class="p">()</span> <span class="kt">string</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//叶子节点，则直接计算该节点Value的哈希值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="k">if</span> <span class="nx">n</span><span class="p">.</span><span class="nx">Value</span> <span class="o">!=</span> <span class="s">&#34;&#34;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="nf">calDataHash</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">Value</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//非叶子节点，则递归计算哈希值,其为2个子节点哈希值的哈希值123123123123
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">return</span> <span class="nf">calDataHash</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">RootTree</span><span class="p">.</span><span class="nx">Nodes</span><span class="p">[</span><span class="nx">n</span><span class="p">.</span><span class="nx">Index</span><span class="o">*</span><span class="mi">2</span><span class="p">].</span><span class="nf">getNodeHash</span><span class="p">()</span> <span class="o">+</span> <span class="nx">n</span><span class="p">.</span><span class="nx">RootTree</span><span class="p">.</span><span class="nx">Nodes</span><span class="p">[</span><span class="nx">n</span><span class="p">.</span><span class="nx">Index</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="nf">getNodeHash</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="p">)</span>                                                         
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//计算数据的哈希值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">func</span> <span class="nf">calDataHash</span><span class="p">(</span><span class="nx">data</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">hash</span> <span class="o">:=</span> <span class="nx">sha256</span><span class="p">.</span><span class="nf">New</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="nx">hash</span><span class="p">.</span><span class="nf">Write</span><span class="p">([]</span><span class="nb">byte</span><span class="p">(</span><span class="nx">data</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="nb">string</span><span class="p">(</span><span class="nx">hash</span><span class="p">.</span><span class="nf">Sum</span><span class="p">(</span><span class="kc">nil</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//从结构化文件创建默克尔树
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">func</span> <span class="nf">CreateMHTree</span><span class="p">(</span><span class="nx">fileName</span> <span class="kt">string</span><span class="p">)</span> <span class="nx">MHTree</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kd">var</span> <span class="nx">tree</span> <span class="nx">MHTree</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//打开文件
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">file</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nf">Open</span><span class="p">(</span><span class="nx">fileName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nb">panic</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">defer</span> <span class="nx">file</span><span class="p">.</span><span class="nf">Close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//获取读取器
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">buf</span> <span class="o">:=</span> <span class="nx">bufio</span><span class="p">.</span><span class="nf">NewReader</span><span class="p">(</span><span class="nx">file</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//读取首行，获得叶子节点数目（要求叶子节点数目为2的整数次幂
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">dataCountStr</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">buf</span><span class="p">.</span><span class="nf">ReadLine</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="nx">dataCount</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">strconv</span><span class="p">.</span><span class="nf">Atoi</span><span class="p">(</span><span class="nb">string</span><span class="p">(</span><span class="nx">dataCountStr</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">//判断幂次
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">level</span> <span class="o">:=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">	<span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>                                          
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="mi">2</span><span class="o">&lt;&lt;</span><span class="nx">i</span> <span class="o">==</span> <span class="nx">dataCount</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nx">level</span> <span class="p">=</span> <span class="nx">i</span>
</span></span><span class="line"><span class="cl">			<span class="k">break</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//创建默克尔树
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">	<span class="c1">//给非叶子节点赋值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;=</span> <span class="mi">2</span><span class="o">&lt;&lt;</span><span class="nx">level</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>                               
</span></span><span class="line"><span class="cl">		<span class="nx">tree</span><span class="p">.</span><span class="nx">Nodes</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">Index</span> <span class="p">=</span> <span class="nx">i</span>
</span></span><span class="line"><span class="cl">		<span class="nx">tree</span><span class="p">.</span><span class="nx">Nodes</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">RootTree</span> <span class="p">=</span> <span class="o">&amp;</span><span class="nx">tree</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//读取文件数据，给叶子节点赋值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">2</span> <span class="o">&lt;&lt;</span> <span class="nx">level</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">tree</span><span class="p">.</span><span class="nx">Length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>                  
</span></span><span class="line"><span class="cl">		<span class="nx">str</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">buf</span><span class="p">.</span><span class="nf">ReadLine</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">		<span class="nx">tree</span><span class="p">.</span><span class="nx">Nodes</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">Index</span> <span class="p">=</span> <span class="nx">i</span>
</span></span><span class="line"><span class="cl">		<span class="nx">tree</span><span class="p">.</span><span class="nx">Nodes</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">RootTree</span> <span class="p">=</span> <span class="o">&amp;</span><span class="nx">tree</span>
</span></span><span class="line"><span class="cl">		<span class="nx">tree</span><span class="p">.</span><span class="nx">Nodes</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">Value</span> <span class="p">=</span> <span class="nb">string</span><span class="p">(</span><span class="nx">str</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="nx">tree</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kd">var</span> <span class="nx">fileName</span> <span class="kt">string</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;请输入原始数据文件名称&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Scanln</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">fileName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">mhTree1</span> <span class="o">:=</span> <span class="nf">CreateMHTree</span><span class="p">(</span><span class="nx">fileName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;请输入比对数据文件名称&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Scanln</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">fileName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">mhTree2</span> <span class="o">:=</span> <span class="nf">CreateMHTree</span><span class="p">(</span><span class="nx">fileName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nx">hash1</span> <span class="o">:=</span> <span class="nx">mhTree1</span><span class="p">.</span><span class="nf">GetRootHash</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="nx">hash2</span> <span class="o">:=</span> <span class="nx">mhTree2</span><span class="p">.</span><span class="nf">GetRootHash</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">hash1</span> <span class="o">==</span> <span class="nx">hash2</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;用户没有改变数据&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;用户改变了数据&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
</channel>
</rss>
